/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "query ApiTokenQuery($token: String!) {\n  apiToken(token: $token) {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}": types.ApiTokenQueryDocument,
    "query ApiTokensQuery {\n  apiTokens {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}": types.ApiTokensQueryDocument,
    "query BalancesQuery($input: BalancesInput!) {\n  balances(input: $input) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}": types.BalancesQueryDocument,
    "query ChartUrlsQuery($input: ChartInput!) {\n  chartUrls(input: $input) {\n    pair {\n      url\n    }\n  }\n}": types.ChartUrlsQueryDocument,
    "query FilterExchangesQuery($filters: ExchangeFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [ExchangeRanking]) {\n  filterExchanges(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      dailyActiveUsers\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      monthlyActiveUsers\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      volumeNBT1\n      volumeNBT4\n      volumeNBT12\n      volumeNBT24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}": types.FilterExchangesQueryDocument,
    "query FilterNftCollectionsQuery($collections: [String], $filters: NftCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftCollectionRanking]) {\n  filterNftCollections(\n    collections: $collections\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      ercType\n      grouping\n      id\n      imageUrl\n      lastEventTimestamp\n      name\n      networkId\n      stats1h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats4h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats12h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats24h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      symbol\n      timestamp\n      totalSupply\n    }\n  }\n}": types.FilterNftCollectionsQueryDocument,
    "query FilterNftParallelAssetsQuery($filters: ParallelAssetFilters, $limit: Int, $match: ParallelAssetMatchers, $offset: Int, $phrase: String, $rankings: [ParallelAssetRanking]) {\n  filterNftParallelAssets(\n    filters: $filters\n    limit: $limit\n    match: $match\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      lastPriceNetworkBaseToken\n      lastPriceUsd\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      parallelId\n      timestamp\n      tokenId\n      uri\n    }\n  }\n}": types.FilterNftParallelAssetsQueryDocument,
    "query FilterNftPoolCollectionsQuery($filters: NftPoolCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolCollectionRanking]) {\n  filterNftPoolCollections(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      balanceNBT\n      balanceUSD\n      collectionAddress\n      ercType\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseUSD24\n      expenseUSDAll\n      floorNBT\n      floorUSD\n      highPriceNBT24\n      highPriceNBTAll\n      highPriceUSD24\n      highPriceUSDAll\n      id\n      imageUrl\n      lowPriceNBT24\n      lowPriceNBTAll\n      lowPriceUSD24\n      lowPriceUSDAll\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerUSD\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueUSD24\n      revenueUSDAll\n      symbol\n      timestamp\n      totalSupply\n      totalSupplyV2\n      volumeNBT24\n      volumeNBTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}": types.FilterNftPoolCollectionsQueryDocument,
    "query FilterNftPoolsQuery($filters: NftPoolFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolRanking]) {\n  filterNftPools(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      balanceUSD\n      bondingCurveAddress\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseT24\n      expenseTAll\n      expenseUSD24\n      expenseUSDAll\n      feeAmount\n      id\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerT\n      offerUSD\n      ownerAddress\n      poolAddress\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesT24\n      poolFeesTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesT24\n      protocolFeesTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueT24\n      revenueTAll\n      revenueUSD24\n      revenueUSDAll\n      royalties {\n        percent\n        recipient\n      }\n      sellNBT\n      sellT\n      sellUSD\n      spotNBT\n      spotT\n      timestamp\n      tokenAddress\n      version\n      volumeNBT24\n      volumeNBTAll\n      volumeT24\n      volumeTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}": types.FilterNftPoolsQueryDocument,
    "query FilterPairsQuery($filters: PairFilters, $limit: Int, $matchTokens: PairFilterMatchTokens, $offset: Int, $pairs: [String], $phrase: String, $rankings: [PairRanking], $statsType: TokenPairStatisticsType) {\n  filterPairs(\n    filters: $filters\n    limit: $limit\n    matchTokens: $matchTokens\n    offset: $offset\n    pairs: $pairs\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n  ) {\n    count\n    offset\n    results {\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      createdAt\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      highPrice1\n      highPrice4\n      highPrice12\n      highPrice24\n      lastTransaction\n      liquidity\n      liquidityToken\n      lockedLiquidityPercentage\n      lowPrice1\n      lowPrice4\n      lowPrice12\n      lowPrice24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      price\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      priceScale\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token0 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}": types.FilterPairsQueryDocument,
    "query FilterTokensQuery($filters: TokenFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [TokenRanking], $statsType: TokenPairStatisticsType, $tokens: [String]) {\n  filterTokens(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n    tokens: $tokens\n  ) {\n    count\n    page\n    results {\n      age\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      change1\n      change4\n      change12\n      change24\n      createdAt\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      fdv\n      high1\n      high4\n      high12\n      high24\n      holders\n      isScam\n      lastTransaction\n      liquidity\n      low1\n      low4\n      low12\n      low24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      priceUSD\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volume1\n      volume4\n      volume12\n      volume24\n    }\n  }\n}": types.FilterTokensQueryDocument,
    "query GetBarsQuery($countback: Int, $currencyCode: String, $from: Int!, $quoteToken: QuoteToken, $removeEmptyBars: Boolean, $removeLeadingNullValues: Boolean, $resolution: String!, $statsType: TokenPairStatisticsType, $symbol: String!, $to: Int!) {\n  getBars(\n    countback: $countback\n    currencyCode: $currencyCode\n    from: $from\n    quoteToken: $quoteToken\n    removeEmptyBars: $removeEmptyBars\n    removeLeadingNullValues: $removeLeadingNullValues\n    resolution: $resolution\n    statsType: $statsType\n    symbol: $symbol\n    to: $to\n  ) {\n    buyVolume\n    buyers\n    buys\n    c\n    h\n    l\n    liquidity\n    o\n    s\n    sellVolume\n    sellers\n    sells\n    t\n    traders\n    transactions\n    v\n    volume\n    volumeNativeToken\n  }\n}": types.GetBarsQueryDocument,
    "query GetCommunityNotesQuery($input: CommunityNotesInput) {\n  getCommunityNotes(input: $input) {\n    count\n    cursor\n    items {\n      address\n      contractType\n      currentData\n      id\n      moderatedAt\n      networkId\n      previousData\n      proposalData\n      proposalNum\n      proposalType\n      proposedAt\n      sortKey\n    }\n  }\n}": types.GetCommunityNotesQueryDocument,
    "query GetDetailedNftStatsQuery($bucketCount: Int, $collectionAddress: String!, $durations: [DetailedNftStatsDuration], $grouping: String, $networkId: Int!, $timestamp: Int) {\n  getDetailedNftStats(\n    bucketCount: $bucketCount\n    collectionAddress: $collectionAddress\n    durations: $durations\n    grouping: $grouping\n    networkId: $networkId\n    timestamp: $timestamp\n  ) {\n    collectionAddress\n    grouping\n    networkId\n    stats_day1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n  }\n}": types.GetDetailedNftStatsQueryDocument,
    "query GetDetailedPairStatsQuery($bucketCount: Int, $durations: [DetailedPairStatsDuration], $networkId: Int!, $pairAddress: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest) {\n  getDetailedPairStats(\n    bucketCount: $bucketCount\n    durations: $durations\n    networkId: $networkId\n    pairAddress: $pairAddress\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n  ) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}": types.GetDetailedPairStatsQueryDocument,
    "query GetDetailedPairsStatsQuery($input: [GetDetailedPairsStatsInput!]!) {\n  getDetailedPairsStats(input: $input) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}": types.GetDetailedPairsStatsQueryDocument,
    "query GetDetailedStatsQuery($bucketCount: Int, $pairId: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest, $windowSizes: [DetailedStatsWindowSize]) {\n  getDetailedStats(\n    bucketCount: $bucketCount\n    pairId: $pairId\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n    windowSizes: $windowSizes\n  ) {\n    bucketCount\n    pairId\n    queryTimestamp\n    statsType\n    stats_day1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour4 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour12 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_min5 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    tokenOfInterest\n  }\n}": types.GetDetailedStatsQueryDocument,
    "query GetEventLabelsQuery($cursor: String, $direction: RankingDirection, $id: String!, $limit: Int) {\n  getEventLabels(cursor: $cursor, direction: $direction, id: $id, limit: $limit) {\n    cursor\n    items {\n      id\n      label\n      logIndex\n      networkId\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetEventLabelsQueryDocument,
    "query GetExchangesQuery($showNameless: Boolean) {\n  getExchanges(showNameless: $showNameless) {\n    address\n    color\n    exchangeVersion\n    iconUrl\n    id\n    name\n    networkId\n    tradeUrl\n  }\n}": types.GetExchangesQueryDocument,
    "query GetLatestPairsQuery($cursor: String, $exchangeFilter: [String!], $limit: Int, $minLiquidityFilter: Int, $networkFilter: [Int!]) {\n  getLatestPairs(\n    cursor: $cursor\n    exchangeFilter: $exchangeFilter\n    limit: $limit\n    minLiquidityFilter: $minLiquidityFilter\n    networkFilter: $networkFilter\n  ) {\n    cursor\n    items {\n      address\n      exchangeHash\n      id\n      initialPriceUsd\n      liquidAt\n      liquidity\n      liquidityToken\n      networkId\n      newToken\n      nonLiquidityToken\n      oldToken\n      priceChange\n      priceUsd\n      token0 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      token1 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      transactionHash\n    }\n  }\n}": types.GetLatestPairsQueryDocument,
    "query GetLatestTokensQuery($limit: Int, $networkFilter: [Int!], $offset: Int) {\n  getLatestTokens(limit: $limit, networkFilter: $networkFilter, offset: $offset) {\n    items {\n      blockHash\n      blockNumber\n      creatorAddress\n      creatorBalance\n      decimals\n      id\n      networkId\n      simulationResults {\n        buyGasUsed\n        buySuccess\n        buyTax\n        canRenounceOwnership\n        canTransferOwnership\n        isOwnerRenounced\n        maxBuyAmount\n        maxSellAmount\n        openTradingCall\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timeCreated\n      tokenAddress\n      tokenName\n      tokenSymbol\n      totalSupply\n      traceIndex\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetLatestTokensQueryDocument,
    "query GetNetworkStatusQuery($networkIds: [Int!]!) {\n  getNetworkStatus(networkIds: $networkIds) {\n    lastProcessedBlock\n    lastProcessedTimestamp\n    networkId\n    networkName\n  }\n}": types.GetNetworkStatusQueryDocument,
    "query GetNetworksQuery {\n  getNetworks {\n    id\n    name\n    networkShortName\n  }\n}": types.GetNetworksQueryDocument,
    "query GetNftAssetsQuery($address: String!, $cursor: String, $fetchMissingAssets: Boolean, $limit: Int, $networkId: Int!, $tokenIds: [String]) {\n  getNftAssets(\n    address: $address\n    cursor: $cursor\n    fetchMissingAssets: $fetchMissingAssets\n    limit: $limit\n    networkId: $networkId\n    tokenIds: $tokenIds\n  ) {\n    cursor\n    itemErrors {\n      address\n      id\n      message\n      networkId\n      status\n      tokenId\n    }\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n  }\n}": types.GetNftAssetsQueryDocument,
    "query GetNftCollectionMetadataQuery($address: String, $collectionId: String, $networkId: Int) {\n  getNftCollectionMetadata(\n    address: $address\n    collectionId: $collectionId\n    networkId: $networkId\n  ) {\n    contract {\n      address\n      description\n      ercType\n      id\n      image\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    id\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    stats {\n      networkBaseTokenPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      tradeCount\n      tradeCountChange\n      usdPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      window\n    }\n  }\n}": types.GetNftCollectionMetadataQueryDocument,
    "query GetNftContractsQuery($contracts: [NftContractInput]) {\n  getNftContracts(contracts: $contracts) {\n    address\n    description\n    ercType\n    id\n    image\n    labels {\n      createdAt\n      subType\n      type\n    }\n    name\n    networkId\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}": types.GetNftContractsQueryDocument,
    "query GetNftEventsQuery($address: String, $cursor: String, $exchangeAddress: String, $includeTransfers: Boolean, $limit: Int, $networkId: Int!, $poolAddress: String, $timestamp: EventQueryTimestampInput, $tokenId: String) {\n  getNftEvents(\n    address: $address\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    includeTransfers: $includeTransfers\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      aggregatorAddress\n      baseTokenAddress\n      baseTokenPrice\n      blockNumber\n      contractAddress\n      eventType\n      exchangeAddress\n      fillSource\n      id\n      individualBaseTokenPrice\n      individualNetworkBaseTokenPrice\n      individualPrice\n      individualPriceNetworkBaseToken\n      individualPriceUsd\n      individualTokenPrice\n      individualTradePrice\n      logIndex\n      maker\n      networkBaseTokenPrice\n      networkId\n      numberOfTokens\n      orderDirection\n      paymentTokenAddress\n      poolAddress\n      priceError\n      sortKey\n      taker\n      timestamp\n      tokenId\n      tokenPrice\n      totalPrice\n      totalPriceNetworkBaseToken\n      totalPriceUsd\n      totalTradePrice\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetNftEventsQueryDocument,
    "query GetNftPoolQuery($address: String!, $networkId: Int!) {\n  getNftPool(address: $address, networkId: $networkId) {\n    acceptedNftTokenIds\n    assetRecipientAddress\n    balanceNBT\n    balanceT\n    bondingCurveAddress\n    bondingCurveType\n    collectionAddress\n    collectionName\n    collectionSymbol\n    delta\n    exchangeAddress\n    fee\n    floorNBT\n    floorT\n    networkId\n    nftAssets {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    offerT\n    owner\n    poolAddress\n    poolFeesAllTimeNBT\n    poolFeesAllTimeT\n    poolId\n    poolNftType\n    poolType\n    poolVariant\n    propertyChecker\n    royalties {\n      percent\n      recipient\n    }\n    spotPriceNBT\n    spotPriceT\n    tokenAddress\n    version\n    volumeAllTimeNBT\n    volumeAllTimeT\n  }\n}": types.GetNftPoolQueryDocument,
    "query GetNftPoolCollectionQuery($collectionAddress: String!, $exchangeAddress: String!, $networkId: Int!) {\n  getNftPoolCollection(\n    collectionAddress: $collectionAddress\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n  ) {\n    balanceNBT\n    collectionAddress\n    collectionId\n    collectionSymbol\n    exchangeAddress\n    exchangeId\n    floorNBT\n    image\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    name\n    networkId\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    poolFeesNBTAll\n    poolFeesUSDAll\n    protocolFeesNBTAll\n    protocolFeesUSDAll\n    royaltiesNBTAllEstimate\n    royaltiesUSDAllEstimate\n    volumeAllTimeNBT\n    volumeAllTimeUSD\n  }\n}": types.GetNftPoolCollectionQueryDocument,
    "query GetNftPoolCollectionsByExchangeQuery($cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolCollectionsByExchange(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      balanceNBT\n      collectionAddress\n      collectionId\n      collectionSymbol\n      exchangeAddress\n      exchangeId\n      floorNBT\n      image\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      poolFeesNBTAll\n      poolFeesUSDAll\n      protocolFeesNBTAll\n      protocolFeesUSDAll\n      royaltiesNBTAllEstimate\n      royaltiesUSDAllEstimate\n      volumeAllTimeNBT\n      volumeAllTimeUSD\n    }\n  }\n}": types.GetNftPoolCollectionsByExchangeQueryDocument,
    "query GetNftPoolEventsQuery($collectionAddress: String, $cursor: String, $eventTypes: [NftPoolEventType!], $exchangeAddress: String, $limit: Int, $networkId: Int!, $poolAddress: String) {\n  getNftPoolEvents(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    eventTypes: $eventTypes\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      collectionAddress\n      collectionId\n      eventType\n      exchangeAddress\n      id\n      logIndex\n      maker\n      networkId\n      poolAddress\n      poolType\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetNftPoolEventsQueryDocument,
    "query GetNftPoolStatsQuery($collectionAddress: String!, $endTime: Int!, $exchangeAddress: String!, $networkId: Int!, $poolAddress: String, $startTime: Int!) {\n  getNftPoolStats(\n    collectionAddress: $collectionAddress\n    endTime: $endTime\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n    poolAddress: $poolAddress\n    startTime: $startTime\n  ) {\n    closeBalanceNBT\n    closeNftBalanceV2\n    collectionAddress\n    endTime\n    exchangeAddress\n    expenseNBT\n    highFloorNBT\n    highOfferNBT\n    lowFloorNBT\n    lowOfferNBT\n    networkId\n    nftVolumeV2\n    nftsBoughtV2\n    nftsSoldV2\n    openBalanceNBT\n    openNftBalanceV2\n    poolAddress\n    poolFeesNBT\n    protocolFeesNBT\n    revenueNBT\n    startTime\n    volumeNBT\n  }\n}": types.GetNftPoolStatsQueryDocument,
    "query GetNftPoolsByCollectionAndExchangeQuery($collectionAddress: String!, $cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolsByCollectionAndExchange(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}": types.GetNftPoolsByCollectionAndExchangeQueryDocument,
    "query GetNftPoolsByOwnerQuery($cursor: String, $exchangeAddress: String, $limit: Int, $networkId: Int!, $ownerAddress: String!) {\n  getNftPoolsByOwner(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    ownerAddress: $ownerAddress\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}": types.GetNftPoolsByOwnerQueryDocument,
    "query GetParallelAssetsQuery($cursor: String, $limit: Int, $tokenIds: [String]) {\n  getParallelAssets(cursor: $cursor, limit: $limit, tokenIds: $tokenIds) {\n    cursor\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      tokenId\n      uri\n    }\n  }\n}": types.GetParallelAssetsQueryDocument,
    "query GetParallelCardChangesQuery($cursor: String, $limit: Int, $timestamp: ParallelCardChangeQueryTimestampInput, $tokenId: String) {\n  getParallelCardChanges(\n    cursor: $cursor\n    limit: $limit\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      diff {\n        new {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n        old {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n      }\n      timestamp\n      tokenId\n    }\n  }\n}": types.GetParallelCardChangesQueryDocument,
    "query GetPrimePoolAssetsQuery($cursor: String, $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolAssets(\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      amount\n      ethRewardDebt\n      from\n      fromHashKey\n      fromSortKey\n      id\n      networkId\n      poolContractAddress\n      poolId\n      primeRewardDebt\n      sortKey\n    }\n  }\n}": types.GetPrimePoolAssetsQueryDocument,
    "query GetPrimePoolEventsQuery($cursor: String, $eventTypes: [PrimePoolEventType], $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolEvents(\n    cursor: $cursor\n    eventTypes: $eventTypes\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      from\n      fromHashKey\n      id\n      logIndex\n      networkId\n      poolContractAddress\n      poolId\n      poolType\n      sortKey\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetPrimePoolEventsQueryDocument,
    "query GetPrimePoolsQuery($address: String!, $cursor: String, $limit: Int, $networkId: Int!, $poolIds: [String]) {\n  getPrimePools(\n    address: $address\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolIds: $poolIds\n  ) {\n    cursor\n    items {\n      calcData {\n        poolAccumulatedEth\n        poolAccumulatedPrime\n        poolEthAmount\n        poolEthPerDay\n        poolEthPerSecond\n        poolPrimeAmount\n        poolPrimePerDay\n        poolPrimePerSecond\n        shareAccumulatedEth\n        shareAccumulatedPrime\n        shareEthPerDay\n        shareEthPerSecond\n        sharePrimePerDay\n        sharePrimePerSecond\n      }\n      chainData {\n        cachingPaused\n        ethAllocPoint\n        ethClaimed\n        ethEndTimestamp\n        ethLastRewardTimestamp\n        ethReward\n        ethStartTimestamp\n        ethTimedCachePeriod\n        ethTotalAllocPoint\n        primeAllocPoint\n        primeEndTimestamp\n        primeLastRewardTimestamp\n        primeStartTimestamp\n        primeTotalAllocPoint\n      }\n      createdAt\n      discoveryBlockNumber\n      discoveryTransactionHash\n      id\n      networkId\n      nftContractAddress\n      poolContractAddress\n      poolId\n      poolType\n      tokenIds\n      totalSupply\n    }\n  }\n}": types.GetPrimePoolsQueryDocument,
    "query GetSimulateTokenContractResultsQuery($contractAddress: String!, $cursor: String, $limit: Int, $networkId: Int!, $simulationId: String) {\n  getSimulateTokenContractResults(\n    contractAddress: $contractAddress\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    simulationId: $simulationId\n  ) {\n    cursor\n    results {\n      analysisType\n      blockNumber\n      contractBalance {\n        tokenContractEthBalance\n        tokenContractTokenBalance\n      }\n      contractHashKey\n      creator {\n        creatorAddress\n        creatorEthBalance\n        creatorTokenBalance\n      }\n      deploy {\n        deploySuccess\n        tokenMintedToDeployer\n      }\n      errors {\n        contractBalanceErrors {\n          tokenContractEthBalanceError\n          tokenContractTokenBalanceError\n        }\n        creatorErrors {\n          creatorEthBalanceError\n          creatorTokenBalanceError\n        }\n        deployErrors {\n          deployError\n          tokenMintedToDeployerError\n        }\n        liquidityErrors {\n          addLiquidityError\n          lpTotalSupplyError\n          postLiquidityEnableTradingError\n          preLiquidityEnableTradingError\n        }\n        ownerErrors {\n          ownerAddressError\n          ownerEthBalanceError\n          ownerTokenBalanceError\n        }\n        simulatorError\n        swapErrors {\n          buyError\n          buyErrorEnum\n          sellError\n          sellErrorEnum\n        }\n        tokenErrors {\n          canRenounceOwnershipError\n          canTransferOwnershipError\n          decimalsError\n          tokenNameError\n          tokenSymbolError\n          totalSupplyError\n        }\n        transferErrors {\n          tokenContractApprovalError\n          tokenTransferredToContractError\n          userApprovalError\n        }\n      }\n      id\n      liquidity {\n        addLiquiditySuccess\n        liquiditySetByPreLiquidityOpenTradingCall\n        lpTotalSupply\n        pairAddress\n        postLiquidityEnableTradingCall\n        postLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingCall\n        preLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingSupportsTransfer\n      }\n      networkId\n      owner {\n        ownerAddress\n        ownerEthBalance\n        ownerTokenBalance\n      }\n      sortKey\n      status\n      swap {\n        buyGasUsed\n        buySuccess\n        buyTax\n        maxBuyAmount\n        maxSellAmount\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timestamp\n      token {\n        canRenounceOwnership\n        canTransferOwnership\n        contractAddress\n        decimals\n        isOwnerRenounced\n        tokenName\n        tokenSymbol\n        totalSupply\n      }\n      transfer {\n        tokenContractApprovalSuccess\n        tokenTransferredToContractSuccess\n        userApprovalSuccess\n      }\n      uuid\n      uuidHashKey\n    }\n  }\n}": types.GetSimulateTokenContractResultsQueryDocument,
    "query GetSymbolQuery($currencyCode: String, $symbol: String!) {\n  getSymbol(currencyCode: $currencyCode, symbol: $symbol) {\n    currency_code\n    description\n    name\n    original_currency_code\n    pricescale\n    supported_resolutions\n    ticker\n  }\n}": types.GetSymbolQueryDocument,
    "query GetTokenCountQuery {\n  getTokenCount\n}": types.GetTokenCountQueryDocument,
    "query GetTokenEventsQuery($cursor: String, $direction: RankingDirection, $limit: Int, $query: EventsQueryInput!) {\n  getTokenEvents(\n    cursor: $cursor\n    direction: $direction\n    limit: $limit\n    query: $query\n  ) {\n    cursor\n    items {\n      address\n      baseTokenPrice\n      blockHash\n      blockNumber\n      eventDisplayType\n      eventType\n      id\n      labels {\n        sandwich {\n          label\n          sandwichType\n          token0DrainedAmount\n          token1DrainedAmount\n        }\n        washtrade {\n          label\n        }\n      }\n      liquidityToken\n      logIndex\n      maker\n      networkId\n      quoteToken\n      timestamp\n      token0PoolValueUsd\n      token0SwapValueUsd\n      token0ValueBase\n      token1PoolValueUsd\n      token1SwapValueUsd\n      token1ValueBase\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.GetTokenEventsQueryDocument,
    "query GetTokenInfoQuery($address: String!, $networkId: Int!) {\n  getTokenInfo(address: $address, networkId: $networkId) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}": types.GetTokenInfoQueryDocument,
    "query GetTokenPricesQuery($inputs: [GetPriceInput]) {\n  getTokenPrices(inputs: $inputs) {\n    address\n    confidence\n    networkId\n    priceUsd\n    timestamp\n  }\n}": types.GetTokenPricesQueryDocument,
    "query GetTokensInfoQuery($input: [GetTokensInfoInput!]!) {\n  getTokensInfo(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}": types.GetTokensInfoQueryDocument,
    "query GetUniV3TicksQuery($limit: Int, $networkId: Int!, $offset: Int, $poolAddress: String!) {\n  getUniV3Ticks(\n    limit: $limit\n    networkId: $networkId\n    offset: $offset\n    poolAddress: $poolAddress\n  ) {\n    count\n    offset\n    results {\n      liquidityNet\n      price0\n      price1\n      tick\n    }\n  }\n}": types.GetUniV3TicksQueryDocument,
    "query GetWebhooksQuery($bucketId: String, $bucketSortkey: String, $cursor: String, $limit: Int, $webhookId: String) {\n  getWebhooks(\n    bucketId: $bucketId\n    bucketSortkey: $bucketSortkey\n    cursor: $cursor\n    limit: $limit\n    webhookId: $webhookId\n  ) {\n    cursor\n    items {\n      alertRecurrence\n      bucketId\n      bucketSortkey\n      callbackUrl\n      created\n      groupId\n      id\n      name\n      publishingType\n      retrySettings {\n        maxRetries\n        maxRetryDelay\n        maxTimeElapsed\n        minRetryDelay\n      }\n      status\n      webhookType\n    }\n  }\n}": types.GetWebhooksQueryDocument,
    "query HoldersQuery($input: HoldersInput!) {\n  holders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n    status\n  }\n}": types.HoldersQueryDocument,
    "query LiquidityLocksQuery($cursor: String, $networkId: Int!, $pairAddress: String!) {\n  liquidityLocks(\n    cursor: $cursor\n    networkId: $networkId\n    pairAddress: $pairAddress\n  ) {\n    cursor\n    items {\n      createdAt\n      initialAmountToken0\n      initialAmountToken1\n      liquidityAmount\n      liquidityNftData {\n        nftPositionManagerAddress\n        nftTokenId\n      }\n      liquidityProtocol\n      lockProtocol\n      lockerAddress\n      networkId\n      ownerAddress\n      pairAddress\n      unlockAt\n    }\n  }\n}": types.LiquidityLocksQueryDocument,
    "query LiquidityMetadataQuery($networkId: Int!, $pairAddress: String!) {\n  liquidityMetadata(networkId: $networkId, pairAddress: $pairAddress) {\n    liquidity {\n      active\n      inactive\n    }\n    lockedLiquidity {\n      active\n      inactive\n      lockBreakdown {\n        active\n        inactive\n        lockProtocol\n      }\n    }\n  }\n}": types.LiquidityMetadataQueryDocument,
    "query ListFavoriteTokensQuery($keys: [String!]!, $networkFilter: [Int!], $resolution: String) {\n  listFavoriteTokens(\n    keys: $keys\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}": types.ListFavoriteTokensQueryDocument,
    "query ListPairsForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    address\n    createdAt\n    exchangeHash\n    fee\n    id\n    networkId\n    pooled {\n      token0\n      token1\n    }\n    tickSpacing\n    token0\n    token0Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n    token1\n    token1Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n  }\n}": types.ListPairsForTokenQueryDocument,
    "query ListPairsWithMetadataForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsWithMetadataForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    results {\n      backingToken {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      exchange {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      liquidity\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      quoteToken\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      volume\n    }\n  }\n}": types.ListPairsWithMetadataForTokenQueryDocument,
    "query ListTopTokensQuery($limit: Int, $networkFilter: [Int!], $resolution: String) {\n  listTopTokens(\n    limit: $limit\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}": types.ListTopTokensQueryDocument,
    "query NftHoldersQuery($input: NftHoldersInput!) {\n  nftHolders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      collectionId\n      walletAddress\n    }\n    status\n  }\n}": types.NftHoldersQueryDocument,
    "query PairMetadataQuery($pairId: String!, $quoteToken: QuoteToken, $statsType: TokenPairStatisticsType) {\n  pairMetadata(pairId: $pairId, quoteToken: $quoteToken, statsType: $statsType) {\n    exchangeId\n    fee\n    highPrice1\n    highPrice1w\n    highPrice4\n    highPrice12\n    highPrice24\n    id\n    liquidity\n    liquidityToken\n    lowPrice1\n    lowPrice1w\n    lowPrice4\n    lowPrice12\n    lowPrice24\n    networkId\n    nonLiquidityToken\n    pairAddress\n    price\n    priceChange1\n    priceChange1w\n    priceChange4\n    priceChange5m\n    priceChange12\n    priceChange24\n    quoteToken\n    statsType\n    tickSpacing\n    token0 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    token1 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    volume1\n    volume1w\n    volume4\n    volume12\n    volume24\n  }\n}": types.PairMetadataQueryDocument,
    "query PrimeBalanceQuery($walletAddress: String!) {\n  primeBalance(walletAddress: $walletAddress) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}": types.PrimeBalanceQueryDocument,
    "query PrimeHoldersQuery($cursor: String) {\n  primeHolders(cursor: $cursor) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}": types.PrimeHoldersQueryDocument,
    "query SearchNftsQuery($filterWashTrading: Boolean, $include: [NftSearchable!], $limit: Int, $networkFilter: [Int!], $search: String, $window: String) {\n  searchNfts(\n    filterWashTrading: $filterWashTrading\n    include: $include\n    limit: $limit\n    networkFilter: $networkFilter\n    search: $search\n    window: $window\n  ) {\n    hasMore\n    items {\n      address\n      average\n      ceiling\n      floor\n      id\n      imageUrl\n      name\n      networkId\n      symbol\n      tradeCount\n      tradeCountChange\n      volume\n      volumeChange\n      window\n    }\n  }\n}": types.SearchNftsQueryDocument,
    "query SearchTokensQuery($limit: Int, $lowVolumeFilter: Boolean, $networkFilter: [Int!], $resolution: String, $search: String!) {\n  searchTokens(\n    limit: $limit\n    lowVolumeFilter: $lowVolumeFilter\n    networkFilter: $networkFilter\n    resolution: $resolution\n    search: $search\n  ) {\n    hasMore\n    hasMoreLowVolume\n    tokens {\n      address\n      createdAt\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      lastTransaction\n      liquidity\n      marketCap\n      name\n      networkId\n      price\n      priceChange\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      quoteToken\n      resolution\n      symbol\n      topPairId\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      volume\n    }\n  }\n}": types.SearchTokensQueryDocument,
    "query TokenQuery($input: TokenInput!) {\n  token(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}": types.TokenQueryDocument,
    "query TokenLifecycleEventsQuery($cursor: String, $limit: Int, $query: TokenLifecycleEventsQueryInput!) {\n  tokenLifecycleEvents(cursor: $cursor, limit: $limit, query: $query) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      id\n      logIndex\n      maker\n      networkId\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}": types.TokenLifecycleEventsQueryDocument,
    "query TokenSparklinesQuery($input: TokenSparklineInput!) {\n  tokenSparklines(input: $input) {\n    attribute\n    id\n    sparkline {\n      timestamp\n      value\n    }\n  }\n}": types.TokenSparklinesQueryDocument,
    "query TokensQuery($ids: [TokenInput!]) {\n  tokens(ids: $ids) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}": types.TokensQueryDocument,
    "query WalletNftCollectionAssetsQuery($input: WalletNftCollectionAssetsInput!) {\n  walletNftCollectionAssets(input: $input) {\n    collectionId\n    cursor\n    items {\n      quantity\n      tokenId\n    }\n    walletAddress\n  }\n}": types.WalletNftCollectionAssetsQueryDocument,
    "query WalletNftCollectionsQuery($input: WalletNftCollectionsInput!) {\n  walletNftCollections(input: $input) {\n    cursor\n    items {\n      collectionId\n      quantity\n      walletAddress\n    }\n  }\n}": types.WalletNftCollectionsQueryDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ApiTokenQuery($token: String!) {\n  apiToken(token: $token) {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}"): (typeof documents)["query ApiTokenQuery($token: String!) {\n  apiToken(token: $token) {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ApiTokensQuery {\n  apiTokens {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}"): (typeof documents)["query ApiTokensQuery {\n  apiTokens {\n    expiresTimeString\n    id\n    remaining\n    requestLimit\n    token\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query BalancesQuery($input: BalancesInput!) {\n  balances(input: $input) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"): (typeof documents)["query BalancesQuery($input: BalancesInput!) {\n  balances(input: $input) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ChartUrlsQuery($input: ChartInput!) {\n  chartUrls(input: $input) {\n    pair {\n      url\n    }\n  }\n}"): (typeof documents)["query ChartUrlsQuery($input: ChartInput!) {\n  chartUrls(input: $input) {\n    pair {\n      url\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterExchangesQuery($filters: ExchangeFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [ExchangeRanking]) {\n  filterExchanges(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      dailyActiveUsers\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      monthlyActiveUsers\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      volumeNBT1\n      volumeNBT4\n      volumeNBT12\n      volumeNBT24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}"): (typeof documents)["query FilterExchangesQuery($filters: ExchangeFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [ExchangeRanking]) {\n  filterExchanges(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      dailyActiveUsers\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      monthlyActiveUsers\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      volumeNBT1\n      volumeNBT4\n      volumeNBT12\n      volumeNBT24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterNftCollectionsQuery($collections: [String], $filters: NftCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftCollectionRanking]) {\n  filterNftCollections(\n    collections: $collections\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      ercType\n      grouping\n      id\n      imageUrl\n      lastEventTimestamp\n      name\n      networkId\n      stats1h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats4h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats12h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats24h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      symbol\n      timestamp\n      totalSupply\n    }\n  }\n}"): (typeof documents)["query FilterNftCollectionsQuery($collections: [String], $filters: NftCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftCollectionRanking]) {\n  filterNftCollections(\n    collections: $collections\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      ercType\n      grouping\n      id\n      imageUrl\n      lastEventTimestamp\n      name\n      networkId\n      stats1h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats4h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats12h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      stats24h {\n        endTime\n        networkBaseToken {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n        nonCurrency {\n          mints {\n            change\n            current\n            previous\n          }\n          sales {\n            change\n            current\n            previous\n          }\n          tokensSold {\n            change\n            current\n            previous\n          }\n          transfers {\n            change\n            current\n            previous\n          }\n          uniqueBuyers {\n            change\n            current\n            previous\n          }\n          uniqueMinters {\n            change\n            current\n            previous\n          }\n          uniqueSalesWallets {\n            change\n            current\n            previous\n          }\n          uniqueSellers {\n            change\n            current\n            previous\n          }\n        }\n        startTime\n        usd {\n          average {\n            change\n            current\n            previous\n          }\n          close {\n            change\n            current\n            previous\n          }\n          highestSale {\n            change\n            current\n            previous\n          }\n          lowestSale {\n            change\n            current\n            previous\n          }\n          open {\n            change\n            current\n            previous\n          }\n          volume {\n            change\n            current\n            previous\n          }\n          volumeByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n          volumePercentByFillsource {\n            change\n            current\n            fillsource\n            previous\n          }\n        }\n      }\n      symbol\n      timestamp\n      totalSupply\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterNftParallelAssetsQuery($filters: ParallelAssetFilters, $limit: Int, $match: ParallelAssetMatchers, $offset: Int, $phrase: String, $rankings: [ParallelAssetRanking]) {\n  filterNftParallelAssets(\n    filters: $filters\n    limit: $limit\n    match: $match\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      lastPriceNetworkBaseToken\n      lastPriceUsd\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      parallelId\n      timestamp\n      tokenId\n      uri\n    }\n  }\n}"): (typeof documents)["query FilterNftParallelAssetsQuery($filters: ParallelAssetFilters, $limit: Int, $match: ParallelAssetMatchers, $offset: Int, $phrase: String, $rankings: [ParallelAssetRanking]) {\n  filterNftParallelAssets(\n    filters: $filters\n    limit: $limit\n    match: $match\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    offset\n    results {\n      address\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      lastPriceNetworkBaseToken\n      lastPriceUsd\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      parallelId\n      timestamp\n      tokenId\n      uri\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterNftPoolCollectionsQuery($filters: NftPoolCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolCollectionRanking]) {\n  filterNftPoolCollections(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      balanceNBT\n      balanceUSD\n      collectionAddress\n      ercType\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseUSD24\n      expenseUSDAll\n      floorNBT\n      floorUSD\n      highPriceNBT24\n      highPriceNBTAll\n      highPriceUSD24\n      highPriceUSDAll\n      id\n      imageUrl\n      lowPriceNBT24\n      lowPriceNBTAll\n      lowPriceUSD24\n      lowPriceUSDAll\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerUSD\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueUSD24\n      revenueUSDAll\n      symbol\n      timestamp\n      totalSupply\n      totalSupplyV2\n      volumeNBT24\n      volumeNBTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}"): (typeof documents)["query FilterNftPoolCollectionsQuery($filters: NftPoolCollectionFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolCollectionRanking]) {\n  filterNftPoolCollections(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      balanceNBT\n      balanceUSD\n      collectionAddress\n      ercType\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseUSD24\n      expenseUSDAll\n      floorNBT\n      floorUSD\n      highPriceNBT24\n      highPriceNBTAll\n      highPriceUSD24\n      highPriceUSDAll\n      id\n      imageUrl\n      lowPriceNBT24\n      lowPriceNBTAll\n      lowPriceUSD24\n      lowPriceUSDAll\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerUSD\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueUSD24\n      revenueUSDAll\n      symbol\n      timestamp\n      totalSupply\n      totalSupplyV2\n      volumeNBT24\n      volumeNBTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterNftPoolsQuery($filters: NftPoolFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolRanking]) {\n  filterNftPools(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      balanceUSD\n      bondingCurveAddress\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseT24\n      expenseTAll\n      expenseUSD24\n      expenseUSDAll\n      feeAmount\n      id\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerT\n      offerUSD\n      ownerAddress\n      poolAddress\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesT24\n      poolFeesTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesT24\n      protocolFeesTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueT24\n      revenueTAll\n      revenueUSD24\n      revenueUSDAll\n      royalties {\n        percent\n        recipient\n      }\n      sellNBT\n      sellT\n      sellUSD\n      spotNBT\n      spotT\n      timestamp\n      tokenAddress\n      version\n      volumeNBT24\n      volumeNBTAll\n      volumeT24\n      volumeTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}"): (typeof documents)["query FilterNftPoolsQuery($filters: NftPoolFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [NftPoolRanking]) {\n  filterNftPools(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n  ) {\n    count\n    page\n    results {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      balanceUSD\n      bondingCurveAddress\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      expenseNBT24\n      expenseNBTAll\n      expenseT24\n      expenseTAll\n      expenseUSD24\n      expenseUSDAll\n      feeAmount\n      id\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolume24\n      nftVolume24V2\n      nftVolumeAll\n      nftVolumeAllV2\n      nftsBought24\n      nftsBought24V2\n      nftsBoughtAll\n      nftsBoughtAllV2\n      nftsSold24\n      nftsSold24V2\n      nftsSoldAll\n      nftsSoldAllV2\n      offerNBT\n      offerT\n      offerUSD\n      ownerAddress\n      poolAddress\n      poolFeesNBT24\n      poolFeesNBTAll\n      poolFeesT24\n      poolFeesTAll\n      poolFeesUSD24\n      poolFeesUSDAll\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      protocolFeesNBT24\n      protocolFeesNBTAll\n      protocolFeesT24\n      protocolFeesTAll\n      protocolFeesUSD24\n      protocolFeesUSDAll\n      revenueNBT24\n      revenueNBTAll\n      revenueT24\n      revenueTAll\n      revenueUSD24\n      revenueUSDAll\n      royalties {\n        percent\n        recipient\n      }\n      sellNBT\n      sellT\n      sellUSD\n      spotNBT\n      spotT\n      timestamp\n      tokenAddress\n      version\n      volumeNBT24\n      volumeNBTAll\n      volumeT24\n      volumeTAll\n      volumeUSD24\n      volumeUSDAll\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterPairsQuery($filters: PairFilters, $limit: Int, $matchTokens: PairFilterMatchTokens, $offset: Int, $pairs: [String], $phrase: String, $rankings: [PairRanking], $statsType: TokenPairStatisticsType) {\n  filterPairs(\n    filters: $filters\n    limit: $limit\n    matchTokens: $matchTokens\n    offset: $offset\n    pairs: $pairs\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n  ) {\n    count\n    offset\n    results {\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      createdAt\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      highPrice1\n      highPrice4\n      highPrice12\n      highPrice24\n      lastTransaction\n      liquidity\n      liquidityToken\n      lockedLiquidityPercentage\n      lowPrice1\n      lowPrice4\n      lowPrice12\n      lowPrice24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      price\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      priceScale\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token0 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}"): (typeof documents)["query FilterPairsQuery($filters: PairFilters, $limit: Int, $matchTokens: PairFilterMatchTokens, $offset: Int, $pairs: [String], $phrase: String, $rankings: [PairRanking], $statsType: TokenPairStatisticsType) {\n  filterPairs(\n    filters: $filters\n    limit: $limit\n    matchTokens: $matchTokens\n    offset: $offset\n    pairs: $pairs\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n  ) {\n    count\n    offset\n    results {\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      createdAt\n      exchange {\n        address\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      highPrice1\n      highPrice4\n      highPrice12\n      highPrice24\n      lastTransaction\n      liquidity\n      liquidityToken\n      lockedLiquidityPercentage\n      lowPrice1\n      lowPrice4\n      lowPrice12\n      lowPrice24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      price\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      priceScale\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token0 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1 {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volumeUSD1\n      volumeUSD4\n      volumeUSD12\n      volumeUSD24\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query FilterTokensQuery($filters: TokenFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [TokenRanking], $statsType: TokenPairStatisticsType, $tokens: [String]) {\n  filterTokens(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n    tokens: $tokens\n  ) {\n    count\n    page\n    results {\n      age\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      change1\n      change4\n      change12\n      change24\n      createdAt\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      fdv\n      high1\n      high4\n      high12\n      high24\n      holders\n      isScam\n      lastTransaction\n      liquidity\n      low1\n      low4\n      low12\n      low24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      priceUSD\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volume1\n      volume4\n      volume12\n      volume24\n    }\n  }\n}"): (typeof documents)["query FilterTokensQuery($filters: TokenFilters, $limit: Int, $offset: Int, $phrase: String, $rankings: [TokenRanking], $statsType: TokenPairStatisticsType, $tokens: [String]) {\n  filterTokens(\n    filters: $filters\n    limit: $limit\n    offset: $offset\n    phrase: $phrase\n    rankings: $rankings\n    statsType: $statsType\n    tokens: $tokens\n  ) {\n    count\n    page\n    results {\n      age\n      buyCount1\n      buyCount4\n      buyCount12\n      buyCount24\n      change1\n      change4\n      change12\n      change24\n      createdAt\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      fdv\n      high1\n      high4\n      high12\n      high24\n      holders\n      isScam\n      lastTransaction\n      liquidity\n      low1\n      low4\n      low12\n      low24\n      marketCap\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      priceUSD\n      quoteToken\n      sellCount1\n      sellCount4\n      sellCount12\n      sellCount24\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      uniqueTransactions1\n      uniqueTransactions4\n      uniqueTransactions12\n      uniqueTransactions24\n      volume1\n      volume4\n      volume12\n      volume24\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetBarsQuery($countback: Int, $currencyCode: String, $from: Int!, $quoteToken: QuoteToken, $removeEmptyBars: Boolean, $removeLeadingNullValues: Boolean, $resolution: String!, $statsType: TokenPairStatisticsType, $symbol: String!, $to: Int!) {\n  getBars(\n    countback: $countback\n    currencyCode: $currencyCode\n    from: $from\n    quoteToken: $quoteToken\n    removeEmptyBars: $removeEmptyBars\n    removeLeadingNullValues: $removeLeadingNullValues\n    resolution: $resolution\n    statsType: $statsType\n    symbol: $symbol\n    to: $to\n  ) {\n    buyVolume\n    buyers\n    buys\n    c\n    h\n    l\n    liquidity\n    o\n    s\n    sellVolume\n    sellers\n    sells\n    t\n    traders\n    transactions\n    v\n    volume\n    volumeNativeToken\n  }\n}"): (typeof documents)["query GetBarsQuery($countback: Int, $currencyCode: String, $from: Int!, $quoteToken: QuoteToken, $removeEmptyBars: Boolean, $removeLeadingNullValues: Boolean, $resolution: String!, $statsType: TokenPairStatisticsType, $symbol: String!, $to: Int!) {\n  getBars(\n    countback: $countback\n    currencyCode: $currencyCode\n    from: $from\n    quoteToken: $quoteToken\n    removeEmptyBars: $removeEmptyBars\n    removeLeadingNullValues: $removeLeadingNullValues\n    resolution: $resolution\n    statsType: $statsType\n    symbol: $symbol\n    to: $to\n  ) {\n    buyVolume\n    buyers\n    buys\n    c\n    h\n    l\n    liquidity\n    o\n    s\n    sellVolume\n    sellers\n    sells\n    t\n    traders\n    transactions\n    v\n    volume\n    volumeNativeToken\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetCommunityNotesQuery($input: CommunityNotesInput) {\n  getCommunityNotes(input: $input) {\n    count\n    cursor\n    items {\n      address\n      contractType\n      currentData\n      id\n      moderatedAt\n      networkId\n      previousData\n      proposalData\n      proposalNum\n      proposalType\n      proposedAt\n      sortKey\n    }\n  }\n}"): (typeof documents)["query GetCommunityNotesQuery($input: CommunityNotesInput) {\n  getCommunityNotes(input: $input) {\n    count\n    cursor\n    items {\n      address\n      contractType\n      currentData\n      id\n      moderatedAt\n      networkId\n      previousData\n      proposalData\n      proposalNum\n      proposalType\n      proposedAt\n      sortKey\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetDetailedNftStatsQuery($bucketCount: Int, $collectionAddress: String!, $durations: [DetailedNftStatsDuration], $grouping: String, $networkId: Int!, $timestamp: Int) {\n  getDetailedNftStats(\n    bucketCount: $bucketCount\n    collectionAddress: $collectionAddress\n    durations: $durations\n    grouping: $grouping\n    networkId: $networkId\n    timestamp: $timestamp\n  ) {\n    collectionAddress\n    grouping\n    networkId\n    stats_day1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n  }\n}"): (typeof documents)["query GetDetailedNftStatsQuery($bucketCount: Int, $collectionAddress: String!, $durations: [DetailedNftStatsDuration], $grouping: String, $networkId: Int!, $timestamp: Int) {\n  getDetailedNftStats(\n    bucketCount: $bucketCount\n    collectionAddress: $collectionAddress\n    durations: $durations\n    grouping: $grouping\n    networkId: $networkId\n    timestamp: $timestamp\n  ) {\n    collectionAddress\n    grouping\n    networkId\n    stats_day1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNetworkBaseToken {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsNonCurrency {\n        mints {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sales {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        tokensSold {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transfers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueBuyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueMinters {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSalesWallets {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        uniqueSellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        average {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowestSale {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetDetailedPairStatsQuery($bucketCount: Int, $durations: [DetailedPairStatsDuration], $networkId: Int!, $pairAddress: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest) {\n  getDetailedPairStats(\n    bucketCount: $bucketCount\n    durations: $durations\n    networkId: $networkId\n    pairAddress: $pairAddress\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n  ) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}"): (typeof documents)["query GetDetailedPairStatsQuery($bucketCount: Int, $durations: [DetailedPairStatsDuration], $networkId: Int!, $pairAddress: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest) {\n  getDetailedPairStats(\n    bucketCount: $bucketCount\n    durations: $durations\n    networkId: $networkId\n    pairAddress: $pairAddress\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n  ) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetDetailedPairsStatsQuery($input: [GetDetailedPairsStatsInput!]!) {\n  getDetailedPairsStats(input: $input) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}"): (typeof documents)["query GetDetailedPairsStatsQuery($input: [GetDetailedPairsStatsInput!]!) {\n  getDetailedPairsStats(input: $input) {\n    bucketCount\n    lastTransaction\n    networkId\n    pair {\n      address\n      createdAt\n      exchangeHash\n      fee\n      id\n      networkId\n      pooled {\n        token0\n        token1\n      }\n      tickSpacing\n      token0\n      token0Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      token1\n      token1Data {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n    }\n    pairAddress\n    queryTimestamp\n    statsType\n    stats_day1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_day30 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour4 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_hour12 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min5 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_min15 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    stats_week1 {\n      duration\n      end\n      start\n      statsNonCurrency {\n        buyers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        buys {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellers {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sells {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        traders {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        transactions {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      statsUsd {\n        buyVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        close {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        highest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        liquidity {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        lowest {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        open {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        sellVolume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n        volume {\n          buckets\n          change\n          currentValue\n          previousValue\n        }\n      }\n      timestamps {\n        end\n        start\n      }\n    }\n    tokenOfInterest\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetDetailedStatsQuery($bucketCount: Int, $pairId: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest, $windowSizes: [DetailedStatsWindowSize]) {\n  getDetailedStats(\n    bucketCount: $bucketCount\n    pairId: $pairId\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n    windowSizes: $windowSizes\n  ) {\n    bucketCount\n    pairId\n    queryTimestamp\n    statsType\n    stats_day1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour4 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour12 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_min5 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    tokenOfInterest\n  }\n}"): (typeof documents)["query GetDetailedStatsQuery($bucketCount: Int, $pairId: String!, $statsType: TokenPairStatisticsType, $timestamp: Int, $tokenOfInterest: TokenOfInterest, $windowSizes: [DetailedStatsWindowSize]) {\n  getDetailedStats(\n    bucketCount: $bucketCount\n    pairId: $pairId\n    statsType: $statsType\n    timestamp: $timestamp\n    tokenOfInterest: $tokenOfInterest\n    windowSizes: $windowSizes\n  ) {\n    bucketCount\n    pairId\n    queryTimestamp\n    statsType\n    stats_day1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour1 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour4 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_hour12 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    stats_min5 {\n      buckets {\n        end\n        start\n      }\n      buyVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buyers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      buys {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      endTimestamp\n      sellVolume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sellers {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      sells {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      timestamp\n      traders {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      transactions {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      volume {\n        buckets\n        change\n        currentValue\n        previousValue\n      }\n      windowSize\n    }\n    tokenOfInterest\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetEventLabelsQuery($cursor: String, $direction: RankingDirection, $id: String!, $limit: Int) {\n  getEventLabels(cursor: $cursor, direction: $direction, id: $id, limit: $limit) {\n    cursor\n    items {\n      id\n      label\n      logIndex\n      networkId\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetEventLabelsQuery($cursor: String, $direction: RankingDirection, $id: String!, $limit: Int) {\n  getEventLabels(cursor: $cursor, direction: $direction, id: $id, limit: $limit) {\n    cursor\n    items {\n      id\n      label\n      logIndex\n      networkId\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetExchangesQuery($showNameless: Boolean) {\n  getExchanges(showNameless: $showNameless) {\n    address\n    color\n    exchangeVersion\n    iconUrl\n    id\n    name\n    networkId\n    tradeUrl\n  }\n}"): (typeof documents)["query GetExchangesQuery($showNameless: Boolean) {\n  getExchanges(showNameless: $showNameless) {\n    address\n    color\n    exchangeVersion\n    iconUrl\n    id\n    name\n    networkId\n    tradeUrl\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetLatestPairsQuery($cursor: String, $exchangeFilter: [String!], $limit: Int, $minLiquidityFilter: Int, $networkFilter: [Int!]) {\n  getLatestPairs(\n    cursor: $cursor\n    exchangeFilter: $exchangeFilter\n    limit: $limit\n    minLiquidityFilter: $minLiquidityFilter\n    networkFilter: $networkFilter\n  ) {\n    cursor\n    items {\n      address\n      exchangeHash\n      id\n      initialPriceUsd\n      liquidAt\n      liquidity\n      liquidityToken\n      networkId\n      newToken\n      nonLiquidityToken\n      oldToken\n      priceChange\n      priceUsd\n      token0 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      token1 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      transactionHash\n    }\n  }\n}"): (typeof documents)["query GetLatestPairsQuery($cursor: String, $exchangeFilter: [String!], $limit: Int, $minLiquidityFilter: Int, $networkFilter: [Int!]) {\n  getLatestPairs(\n    cursor: $cursor\n    exchangeFilter: $exchangeFilter\n    limit: $limit\n    minLiquidityFilter: $minLiquidityFilter\n    networkFilter: $networkFilter\n  ) {\n    cursor\n    items {\n      address\n      exchangeHash\n      id\n      initialPriceUsd\n      liquidAt\n      liquidity\n      liquidityToken\n      networkId\n      newToken\n      nonLiquidityToken\n      oldToken\n      priceChange\n      priceUsd\n      token0 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      token1 {\n        address\n        currentPoolAmount\n        decimals\n        id\n        initialPoolAmount\n        name\n        networkId\n        pairId\n        poolVariation\n        symbol\n      }\n      transactionHash\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetLatestTokensQuery($limit: Int, $networkFilter: [Int!], $offset: Int) {\n  getLatestTokens(limit: $limit, networkFilter: $networkFilter, offset: $offset) {\n    items {\n      blockHash\n      blockNumber\n      creatorAddress\n      creatorBalance\n      decimals\n      id\n      networkId\n      simulationResults {\n        buyGasUsed\n        buySuccess\n        buyTax\n        canRenounceOwnership\n        canTransferOwnership\n        isOwnerRenounced\n        maxBuyAmount\n        maxSellAmount\n        openTradingCall\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timeCreated\n      tokenAddress\n      tokenName\n      tokenSymbol\n      totalSupply\n      traceIndex\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetLatestTokensQuery($limit: Int, $networkFilter: [Int!], $offset: Int) {\n  getLatestTokens(limit: $limit, networkFilter: $networkFilter, offset: $offset) {\n    items {\n      blockHash\n      blockNumber\n      creatorAddress\n      creatorBalance\n      decimals\n      id\n      networkId\n      simulationResults {\n        buyGasUsed\n        buySuccess\n        buyTax\n        canRenounceOwnership\n        canTransferOwnership\n        isOwnerRenounced\n        maxBuyAmount\n        maxSellAmount\n        openTradingCall\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timeCreated\n      tokenAddress\n      tokenName\n      tokenSymbol\n      totalSupply\n      traceIndex\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNetworkStatusQuery($networkIds: [Int!]!) {\n  getNetworkStatus(networkIds: $networkIds) {\n    lastProcessedBlock\n    lastProcessedTimestamp\n    networkId\n    networkName\n  }\n}"): (typeof documents)["query GetNetworkStatusQuery($networkIds: [Int!]!) {\n  getNetworkStatus(networkIds: $networkIds) {\n    lastProcessedBlock\n    lastProcessedTimestamp\n    networkId\n    networkName\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNetworksQuery {\n  getNetworks {\n    id\n    name\n    networkShortName\n  }\n}"): (typeof documents)["query GetNetworksQuery {\n  getNetworks {\n    id\n    name\n    networkShortName\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftAssetsQuery($address: String!, $cursor: String, $fetchMissingAssets: Boolean, $limit: Int, $networkId: Int!, $tokenIds: [String]) {\n  getNftAssets(\n    address: $address\n    cursor: $cursor\n    fetchMissingAssets: $fetchMissingAssets\n    limit: $limit\n    networkId: $networkId\n    tokenIds: $tokenIds\n  ) {\n    cursor\n    itemErrors {\n      address\n      id\n      message\n      networkId\n      status\n      tokenId\n    }\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n  }\n}"): (typeof documents)["query GetNftAssetsQuery($address: String!, $cursor: String, $fetchMissingAssets: Boolean, $limit: Int, $networkId: Int!, $tokenIds: [String]) {\n  getNftAssets(\n    address: $address\n    cursor: $cursor\n    fetchMissingAssets: $fetchMissingAssets\n    limit: $limit\n    networkId: $networkId\n    tokenIds: $tokenIds\n  ) {\n    cursor\n    itemErrors {\n      address\n      id\n      message\n      networkId\n      status\n      tokenId\n    }\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftCollectionMetadataQuery($address: String, $collectionId: String, $networkId: Int) {\n  getNftCollectionMetadata(\n    address: $address\n    collectionId: $collectionId\n    networkId: $networkId\n  ) {\n    contract {\n      address\n      description\n      ercType\n      id\n      image\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    id\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    stats {\n      networkBaseTokenPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      tradeCount\n      tradeCountChange\n      usdPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      window\n    }\n  }\n}"): (typeof documents)["query GetNftCollectionMetadataQuery($address: String, $collectionId: String, $networkId: Int) {\n  getNftCollectionMetadata(\n    address: $address\n    collectionId: $collectionId\n    networkId: $networkId\n  ) {\n    contract {\n      address\n      description\n      ercType\n      id\n      image\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    id\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    stats {\n      networkBaseTokenPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      tradeCount\n      tradeCountChange\n      usdPriceStats {\n        average\n        averageChange\n        ceiling\n        ceilingChange\n        floor\n        floorChange\n        volume\n        volumeByFillsource {\n          amount\n          change\n          fillsource\n        }\n        volumeChange\n        volumePercentByFillsource {\n          amount\n          change\n          fillsource\n        }\n      }\n      window\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftContractsQuery($contracts: [NftContractInput]) {\n  getNftContracts(contracts: $contracts) {\n    address\n    description\n    ercType\n    id\n    image\n    labels {\n      createdAt\n      subType\n      type\n    }\n    name\n    networkId\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"): (typeof documents)["query GetNftContractsQuery($contracts: [NftContractInput]) {\n  getNftContracts(contracts: $contracts) {\n    address\n    description\n    ercType\n    id\n    image\n    labels {\n      createdAt\n      subType\n      type\n    }\n    name\n    networkId\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftEventsQuery($address: String, $cursor: String, $exchangeAddress: String, $includeTransfers: Boolean, $limit: Int, $networkId: Int!, $poolAddress: String, $timestamp: EventQueryTimestampInput, $tokenId: String) {\n  getNftEvents(\n    address: $address\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    includeTransfers: $includeTransfers\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      aggregatorAddress\n      baseTokenAddress\n      baseTokenPrice\n      blockNumber\n      contractAddress\n      eventType\n      exchangeAddress\n      fillSource\n      id\n      individualBaseTokenPrice\n      individualNetworkBaseTokenPrice\n      individualPrice\n      individualPriceNetworkBaseToken\n      individualPriceUsd\n      individualTokenPrice\n      individualTradePrice\n      logIndex\n      maker\n      networkBaseTokenPrice\n      networkId\n      numberOfTokens\n      orderDirection\n      paymentTokenAddress\n      poolAddress\n      priceError\n      sortKey\n      taker\n      timestamp\n      tokenId\n      tokenPrice\n      totalPrice\n      totalPriceNetworkBaseToken\n      totalPriceUsd\n      totalTradePrice\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetNftEventsQuery($address: String, $cursor: String, $exchangeAddress: String, $includeTransfers: Boolean, $limit: Int, $networkId: Int!, $poolAddress: String, $timestamp: EventQueryTimestampInput, $tokenId: String) {\n  getNftEvents(\n    address: $address\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    includeTransfers: $includeTransfers\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      aggregatorAddress\n      baseTokenAddress\n      baseTokenPrice\n      blockNumber\n      contractAddress\n      eventType\n      exchangeAddress\n      fillSource\n      id\n      individualBaseTokenPrice\n      individualNetworkBaseTokenPrice\n      individualPrice\n      individualPriceNetworkBaseToken\n      individualPriceUsd\n      individualTokenPrice\n      individualTradePrice\n      logIndex\n      maker\n      networkBaseTokenPrice\n      networkId\n      numberOfTokens\n      orderDirection\n      paymentTokenAddress\n      poolAddress\n      priceError\n      sortKey\n      taker\n      timestamp\n      tokenId\n      tokenPrice\n      totalPrice\n      totalPriceNetworkBaseToken\n      totalPriceUsd\n      totalTradePrice\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolQuery($address: String!, $networkId: Int!) {\n  getNftPool(address: $address, networkId: $networkId) {\n    acceptedNftTokenIds\n    assetRecipientAddress\n    balanceNBT\n    balanceT\n    bondingCurveAddress\n    bondingCurveType\n    collectionAddress\n    collectionName\n    collectionSymbol\n    delta\n    exchangeAddress\n    fee\n    floorNBT\n    floorT\n    networkId\n    nftAssets {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    offerT\n    owner\n    poolAddress\n    poolFeesAllTimeNBT\n    poolFeesAllTimeT\n    poolId\n    poolNftType\n    poolType\n    poolVariant\n    propertyChecker\n    royalties {\n      percent\n      recipient\n    }\n    spotPriceNBT\n    spotPriceT\n    tokenAddress\n    version\n    volumeAllTimeNBT\n    volumeAllTimeT\n  }\n}"): (typeof documents)["query GetNftPoolQuery($address: String!, $networkId: Int!) {\n  getNftPool(address: $address, networkId: $networkId) {\n    acceptedNftTokenIds\n    assetRecipientAddress\n    balanceNBT\n    balanceT\n    bondingCurveAddress\n    bondingCurveType\n    collectionAddress\n    collectionName\n    collectionSymbol\n    delta\n    exchangeAddress\n    fee\n    floorNBT\n    floorT\n    networkId\n    nftAssets {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      originalImage\n      quantity\n      rawAssetData {\n        animationUrl\n        externalUrl\n        imageData\n        imageUrl\n      }\n      tokenId\n      uri\n    }\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    offerT\n    owner\n    poolAddress\n    poolFeesAllTimeNBT\n    poolFeesAllTimeT\n    poolId\n    poolNftType\n    poolType\n    poolVariant\n    propertyChecker\n    royalties {\n      percent\n      recipient\n    }\n    spotPriceNBT\n    spotPriceT\n    tokenAddress\n    version\n    volumeAllTimeNBT\n    volumeAllTimeT\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolCollectionQuery($collectionAddress: String!, $exchangeAddress: String!, $networkId: Int!) {\n  getNftPoolCollection(\n    collectionAddress: $collectionAddress\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n  ) {\n    balanceNBT\n    collectionAddress\n    collectionId\n    collectionSymbol\n    exchangeAddress\n    exchangeId\n    floorNBT\n    image\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    name\n    networkId\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    poolFeesNBTAll\n    poolFeesUSDAll\n    protocolFeesNBTAll\n    protocolFeesUSDAll\n    royaltiesNBTAllEstimate\n    royaltiesUSDAllEstimate\n    volumeAllTimeNBT\n    volumeAllTimeUSD\n  }\n}"): (typeof documents)["query GetNftPoolCollectionQuery($collectionAddress: String!, $exchangeAddress: String!, $networkId: Int!) {\n  getNftPoolCollection(\n    collectionAddress: $collectionAddress\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n  ) {\n    balanceNBT\n    collectionAddress\n    collectionId\n    collectionSymbol\n    exchangeAddress\n    exchangeId\n    floorNBT\n    image\n    media {\n      image\n      processed\n      thumbLg\n      thumbSm\n    }\n    name\n    networkId\n    nftBalance\n    nftBalanceV2\n    nftVolumeAllTime\n    nftVolumeAllTimeV2\n    offerNBT\n    poolFeesNBTAll\n    poolFeesUSDAll\n    protocolFeesNBTAll\n    protocolFeesUSDAll\n    royaltiesNBTAllEstimate\n    royaltiesUSDAllEstimate\n    volumeAllTimeNBT\n    volumeAllTimeUSD\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolCollectionsByExchangeQuery($cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolCollectionsByExchange(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      balanceNBT\n      collectionAddress\n      collectionId\n      collectionSymbol\n      exchangeAddress\n      exchangeId\n      floorNBT\n      image\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      poolFeesNBTAll\n      poolFeesUSDAll\n      protocolFeesNBTAll\n      protocolFeesUSDAll\n      royaltiesNBTAllEstimate\n      royaltiesUSDAllEstimate\n      volumeAllTimeNBT\n      volumeAllTimeUSD\n    }\n  }\n}"): (typeof documents)["query GetNftPoolCollectionsByExchangeQuery($cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolCollectionsByExchange(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      balanceNBT\n      collectionAddress\n      collectionId\n      collectionSymbol\n      exchangeAddress\n      exchangeId\n      floorNBT\n      image\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      name\n      networkId\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      poolFeesNBTAll\n      poolFeesUSDAll\n      protocolFeesNBTAll\n      protocolFeesUSDAll\n      royaltiesNBTAllEstimate\n      royaltiesUSDAllEstimate\n      volumeAllTimeNBT\n      volumeAllTimeUSD\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolEventsQuery($collectionAddress: String, $cursor: String, $eventTypes: [NftPoolEventType!], $exchangeAddress: String, $limit: Int, $networkId: Int!, $poolAddress: String) {\n  getNftPoolEvents(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    eventTypes: $eventTypes\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      collectionAddress\n      collectionId\n      eventType\n      exchangeAddress\n      id\n      logIndex\n      maker\n      networkId\n      poolAddress\n      poolType\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetNftPoolEventsQuery($collectionAddress: String, $cursor: String, $eventTypes: [NftPoolEventType!], $exchangeAddress: String, $limit: Int, $networkId: Int!, $poolAddress: String) {\n  getNftPoolEvents(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    eventTypes: $eventTypes\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    poolAddress: $poolAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      collectionAddress\n      collectionId\n      eventType\n      exchangeAddress\n      id\n      logIndex\n      maker\n      networkId\n      poolAddress\n      poolType\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolStatsQuery($collectionAddress: String!, $endTime: Int!, $exchangeAddress: String!, $networkId: Int!, $poolAddress: String, $startTime: Int!) {\n  getNftPoolStats(\n    collectionAddress: $collectionAddress\n    endTime: $endTime\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n    poolAddress: $poolAddress\n    startTime: $startTime\n  ) {\n    closeBalanceNBT\n    closeNftBalanceV2\n    collectionAddress\n    endTime\n    exchangeAddress\n    expenseNBT\n    highFloorNBT\n    highOfferNBT\n    lowFloorNBT\n    lowOfferNBT\n    networkId\n    nftVolumeV2\n    nftsBoughtV2\n    nftsSoldV2\n    openBalanceNBT\n    openNftBalanceV2\n    poolAddress\n    poolFeesNBT\n    protocolFeesNBT\n    revenueNBT\n    startTime\n    volumeNBT\n  }\n}"): (typeof documents)["query GetNftPoolStatsQuery($collectionAddress: String!, $endTime: Int!, $exchangeAddress: String!, $networkId: Int!, $poolAddress: String, $startTime: Int!) {\n  getNftPoolStats(\n    collectionAddress: $collectionAddress\n    endTime: $endTime\n    exchangeAddress: $exchangeAddress\n    networkId: $networkId\n    poolAddress: $poolAddress\n    startTime: $startTime\n  ) {\n    closeBalanceNBT\n    closeNftBalanceV2\n    collectionAddress\n    endTime\n    exchangeAddress\n    expenseNBT\n    highFloorNBT\n    highOfferNBT\n    lowFloorNBT\n    lowOfferNBT\n    networkId\n    nftVolumeV2\n    nftsBoughtV2\n    nftsSoldV2\n    openBalanceNBT\n    openNftBalanceV2\n    poolAddress\n    poolFeesNBT\n    protocolFeesNBT\n    revenueNBT\n    startTime\n    volumeNBT\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolsByCollectionAndExchangeQuery($collectionAddress: String!, $cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolsByCollectionAndExchange(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}"): (typeof documents)["query GetNftPoolsByCollectionAndExchangeQuery($collectionAddress: String!, $cursor: String, $exchangeAddress: String!, $limit: Int, $networkId: Int!) {\n  getNftPoolsByCollectionAndExchange(\n    collectionAddress: $collectionAddress\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetNftPoolsByOwnerQuery($cursor: String, $exchangeAddress: String, $limit: Int, $networkId: Int!, $ownerAddress: String!) {\n  getNftPoolsByOwner(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    ownerAddress: $ownerAddress\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}"): (typeof documents)["query GetNftPoolsByOwnerQuery($cursor: String, $exchangeAddress: String, $limit: Int, $networkId: Int!, $ownerAddress: String!) {\n  getNftPoolsByOwner(\n    cursor: $cursor\n    exchangeAddress: $exchangeAddress\n    limit: $limit\n    networkId: $networkId\n    ownerAddress: $ownerAddress\n  ) {\n    cursor\n    items {\n      acceptedNftTokenIds\n      assetRecipientAddress\n      balanceNBT\n      balanceT\n      bondingCurveAddress\n      bondingCurveType\n      collectionAddress\n      collectionName\n      collectionSymbol\n      delta\n      exchangeAddress\n      fee\n      floorNBT\n      floorT\n      networkId\n      nftAssets {\n        address\n        attributes {\n          class\n          css\n          displayType\n          maxValue\n          name\n          value\n          valueType\n        }\n        description\n        id\n        media {\n          image\n          processed\n          thumbLg\n          thumbSm\n        }\n        name\n        networkId\n        originalImage\n        quantity\n        rawAssetData {\n          animationUrl\n          externalUrl\n          imageData\n          imageUrl\n        }\n        tokenId\n        uri\n      }\n      nftBalance\n      nftBalanceV2\n      nftVolumeAllTime\n      nftVolumeAllTimeV2\n      offerNBT\n      offerT\n      owner\n      poolAddress\n      poolFeesAllTimeNBT\n      poolFeesAllTimeT\n      poolId\n      poolNftType\n      poolType\n      poolVariant\n      propertyChecker\n      royalties {\n        percent\n        recipient\n      }\n      spotPriceNBT\n      spotPriceT\n      tokenAddress\n      version\n      volumeAllTimeNBT\n      volumeAllTimeT\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetParallelAssetsQuery($cursor: String, $limit: Int, $tokenIds: [String]) {\n  getParallelAssets(cursor: $cursor, limit: $limit, tokenIds: $tokenIds) {\n    cursor\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      tokenId\n      uri\n    }\n  }\n}"): (typeof documents)["query GetParallelAssetsQuery($cursor: String, $limit: Int, $tokenIds: [String]) {\n  getParallelAssets(cursor: $cursor, limit: $limit, tokenIds: $tokenIds) {\n    cursor\n    items {\n      address\n      attributes {\n        class\n        css\n        displayType\n        maxValue\n        name\n        value\n        valueType\n      }\n      description\n      gameData {\n        attack\n        cardType\n        cost\n        functionText\n        health\n        parallel\n        passiveAbility\n        rarity\n        subtype\n      }\n      id\n      media {\n        image\n        processed\n        thumbLg\n        thumbSm\n      }\n      metadata {\n        artist\n        class\n        expansion\n        flavourText\n        parallelId\n        paraset\n        supply\n      }\n      name\n      networkId\n      originalImage\n      tokenId\n      uri\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetParallelCardChangesQuery($cursor: String, $limit: Int, $timestamp: ParallelCardChangeQueryTimestampInput, $tokenId: String) {\n  getParallelCardChanges(\n    cursor: $cursor\n    limit: $limit\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      diff {\n        new {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n        old {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n      }\n      timestamp\n      tokenId\n    }\n  }\n}"): (typeof documents)["query GetParallelCardChangesQuery($cursor: String, $limit: Int, $timestamp: ParallelCardChangeQueryTimestampInput, $tokenId: String) {\n  getParallelCardChanges(\n    cursor: $cursor\n    limit: $limit\n    timestamp: $timestamp\n    tokenId: $tokenId\n  ) {\n    cursor\n    items {\n      diff {\n        new {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n        old {\n          artist\n          attack\n          cardType\n          class\n          cost\n          expansion\n          flavourText\n          functionText\n          health\n          parallel\n          parallelId\n          paraset\n          passiveAbility\n          rarity\n          subtype\n          supply\n        }\n      }\n      timestamp\n      tokenId\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetPrimePoolAssetsQuery($cursor: String, $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolAssets(\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      amount\n      ethRewardDebt\n      from\n      fromHashKey\n      fromSortKey\n      id\n      networkId\n      poolContractAddress\n      poolId\n      primeRewardDebt\n      sortKey\n    }\n  }\n}"): (typeof documents)["query GetPrimePoolAssetsQuery($cursor: String, $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolAssets(\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      amount\n      ethRewardDebt\n      from\n      fromHashKey\n      fromSortKey\n      id\n      networkId\n      poolContractAddress\n      poolId\n      primeRewardDebt\n      sortKey\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetPrimePoolEventsQuery($cursor: String, $eventTypes: [PrimePoolEventType], $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolEvents(\n    cursor: $cursor\n    eventTypes: $eventTypes\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      from\n      fromHashKey\n      id\n      logIndex\n      networkId\n      poolContractAddress\n      poolId\n      poolType\n      sortKey\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetPrimePoolEventsQuery($cursor: String, $eventTypes: [PrimePoolEventType], $limit: Int, $networkId: Int!, $poolContractAddress: String, $poolId: String, $walletAddress: String) {\n  getPrimePoolEvents(\n    cursor: $cursor\n    eventTypes: $eventTypes\n    limit: $limit\n    networkId: $networkId\n    poolContractAddress: $poolContractAddress\n    poolId: $poolId\n    walletAddress: $walletAddress\n  ) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      from\n      fromHashKey\n      id\n      logIndex\n      networkId\n      poolContractAddress\n      poolId\n      poolType\n      sortKey\n      timestamp\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetPrimePoolsQuery($address: String!, $cursor: String, $limit: Int, $networkId: Int!, $poolIds: [String]) {\n  getPrimePools(\n    address: $address\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolIds: $poolIds\n  ) {\n    cursor\n    items {\n      calcData {\n        poolAccumulatedEth\n        poolAccumulatedPrime\n        poolEthAmount\n        poolEthPerDay\n        poolEthPerSecond\n        poolPrimeAmount\n        poolPrimePerDay\n        poolPrimePerSecond\n        shareAccumulatedEth\n        shareAccumulatedPrime\n        shareEthPerDay\n        shareEthPerSecond\n        sharePrimePerDay\n        sharePrimePerSecond\n      }\n      chainData {\n        cachingPaused\n        ethAllocPoint\n        ethClaimed\n        ethEndTimestamp\n        ethLastRewardTimestamp\n        ethReward\n        ethStartTimestamp\n        ethTimedCachePeriod\n        ethTotalAllocPoint\n        primeAllocPoint\n        primeEndTimestamp\n        primeLastRewardTimestamp\n        primeStartTimestamp\n        primeTotalAllocPoint\n      }\n      createdAt\n      discoveryBlockNumber\n      discoveryTransactionHash\n      id\n      networkId\n      nftContractAddress\n      poolContractAddress\n      poolId\n      poolType\n      tokenIds\n      totalSupply\n    }\n  }\n}"): (typeof documents)["query GetPrimePoolsQuery($address: String!, $cursor: String, $limit: Int, $networkId: Int!, $poolIds: [String]) {\n  getPrimePools(\n    address: $address\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    poolIds: $poolIds\n  ) {\n    cursor\n    items {\n      calcData {\n        poolAccumulatedEth\n        poolAccumulatedPrime\n        poolEthAmount\n        poolEthPerDay\n        poolEthPerSecond\n        poolPrimeAmount\n        poolPrimePerDay\n        poolPrimePerSecond\n        shareAccumulatedEth\n        shareAccumulatedPrime\n        shareEthPerDay\n        shareEthPerSecond\n        sharePrimePerDay\n        sharePrimePerSecond\n      }\n      chainData {\n        cachingPaused\n        ethAllocPoint\n        ethClaimed\n        ethEndTimestamp\n        ethLastRewardTimestamp\n        ethReward\n        ethStartTimestamp\n        ethTimedCachePeriod\n        ethTotalAllocPoint\n        primeAllocPoint\n        primeEndTimestamp\n        primeLastRewardTimestamp\n        primeStartTimestamp\n        primeTotalAllocPoint\n      }\n      createdAt\n      discoveryBlockNumber\n      discoveryTransactionHash\n      id\n      networkId\n      nftContractAddress\n      poolContractAddress\n      poolId\n      poolType\n      tokenIds\n      totalSupply\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetSimulateTokenContractResultsQuery($contractAddress: String!, $cursor: String, $limit: Int, $networkId: Int!, $simulationId: String) {\n  getSimulateTokenContractResults(\n    contractAddress: $contractAddress\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    simulationId: $simulationId\n  ) {\n    cursor\n    results {\n      analysisType\n      blockNumber\n      contractBalance {\n        tokenContractEthBalance\n        tokenContractTokenBalance\n      }\n      contractHashKey\n      creator {\n        creatorAddress\n        creatorEthBalance\n        creatorTokenBalance\n      }\n      deploy {\n        deploySuccess\n        tokenMintedToDeployer\n      }\n      errors {\n        contractBalanceErrors {\n          tokenContractEthBalanceError\n          tokenContractTokenBalanceError\n        }\n        creatorErrors {\n          creatorEthBalanceError\n          creatorTokenBalanceError\n        }\n        deployErrors {\n          deployError\n          tokenMintedToDeployerError\n        }\n        liquidityErrors {\n          addLiquidityError\n          lpTotalSupplyError\n          postLiquidityEnableTradingError\n          preLiquidityEnableTradingError\n        }\n        ownerErrors {\n          ownerAddressError\n          ownerEthBalanceError\n          ownerTokenBalanceError\n        }\n        simulatorError\n        swapErrors {\n          buyError\n          buyErrorEnum\n          sellError\n          sellErrorEnum\n        }\n        tokenErrors {\n          canRenounceOwnershipError\n          canTransferOwnershipError\n          decimalsError\n          tokenNameError\n          tokenSymbolError\n          totalSupplyError\n        }\n        transferErrors {\n          tokenContractApprovalError\n          tokenTransferredToContractError\n          userApprovalError\n        }\n      }\n      id\n      liquidity {\n        addLiquiditySuccess\n        liquiditySetByPreLiquidityOpenTradingCall\n        lpTotalSupply\n        pairAddress\n        postLiquidityEnableTradingCall\n        postLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingCall\n        preLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingSupportsTransfer\n      }\n      networkId\n      owner {\n        ownerAddress\n        ownerEthBalance\n        ownerTokenBalance\n      }\n      sortKey\n      status\n      swap {\n        buyGasUsed\n        buySuccess\n        buyTax\n        maxBuyAmount\n        maxSellAmount\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timestamp\n      token {\n        canRenounceOwnership\n        canTransferOwnership\n        contractAddress\n        decimals\n        isOwnerRenounced\n        tokenName\n        tokenSymbol\n        totalSupply\n      }\n      transfer {\n        tokenContractApprovalSuccess\n        tokenTransferredToContractSuccess\n        userApprovalSuccess\n      }\n      uuid\n      uuidHashKey\n    }\n  }\n}"): (typeof documents)["query GetSimulateTokenContractResultsQuery($contractAddress: String!, $cursor: String, $limit: Int, $networkId: Int!, $simulationId: String) {\n  getSimulateTokenContractResults(\n    contractAddress: $contractAddress\n    cursor: $cursor\n    limit: $limit\n    networkId: $networkId\n    simulationId: $simulationId\n  ) {\n    cursor\n    results {\n      analysisType\n      blockNumber\n      contractBalance {\n        tokenContractEthBalance\n        tokenContractTokenBalance\n      }\n      contractHashKey\n      creator {\n        creatorAddress\n        creatorEthBalance\n        creatorTokenBalance\n      }\n      deploy {\n        deploySuccess\n        tokenMintedToDeployer\n      }\n      errors {\n        contractBalanceErrors {\n          tokenContractEthBalanceError\n          tokenContractTokenBalanceError\n        }\n        creatorErrors {\n          creatorEthBalanceError\n          creatorTokenBalanceError\n        }\n        deployErrors {\n          deployError\n          tokenMintedToDeployerError\n        }\n        liquidityErrors {\n          addLiquidityError\n          lpTotalSupplyError\n          postLiquidityEnableTradingError\n          preLiquidityEnableTradingError\n        }\n        ownerErrors {\n          ownerAddressError\n          ownerEthBalanceError\n          ownerTokenBalanceError\n        }\n        simulatorError\n        swapErrors {\n          buyError\n          buyErrorEnum\n          sellError\n          sellErrorEnum\n        }\n        tokenErrors {\n          canRenounceOwnershipError\n          canTransferOwnershipError\n          decimalsError\n          tokenNameError\n          tokenSymbolError\n          totalSupplyError\n        }\n        transferErrors {\n          tokenContractApprovalError\n          tokenTransferredToContractError\n          userApprovalError\n        }\n      }\n      id\n      liquidity {\n        addLiquiditySuccess\n        liquiditySetByPreLiquidityOpenTradingCall\n        lpTotalSupply\n        pairAddress\n        postLiquidityEnableTradingCall\n        postLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingCall\n        preLiquidityEnableTradingSuccess\n        preLiquidityEnableTradingSupportsTransfer\n      }\n      networkId\n      owner {\n        ownerAddress\n        ownerEthBalance\n        ownerTokenBalance\n      }\n      sortKey\n      status\n      swap {\n        buyGasUsed\n        buySuccess\n        buyTax\n        maxBuyAmount\n        maxSellAmount\n        sellGasUsed\n        sellSuccess\n        sellTax\n      }\n      timestamp\n      token {\n        canRenounceOwnership\n        canTransferOwnership\n        contractAddress\n        decimals\n        isOwnerRenounced\n        tokenName\n        tokenSymbol\n        totalSupply\n      }\n      transfer {\n        tokenContractApprovalSuccess\n        tokenTransferredToContractSuccess\n        userApprovalSuccess\n      }\n      uuid\n      uuidHashKey\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetSymbolQuery($currencyCode: String, $symbol: String!) {\n  getSymbol(currencyCode: $currencyCode, symbol: $symbol) {\n    currency_code\n    description\n    name\n    original_currency_code\n    pricescale\n    supported_resolutions\n    ticker\n  }\n}"): (typeof documents)["query GetSymbolQuery($currencyCode: String, $symbol: String!) {\n  getSymbol(currencyCode: $currencyCode, symbol: $symbol) {\n    currency_code\n    description\n    name\n    original_currency_code\n    pricescale\n    supported_resolutions\n    ticker\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetTokenCountQuery {\n  getTokenCount\n}"): (typeof documents)["query GetTokenCountQuery {\n  getTokenCount\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetTokenEventsQuery($cursor: String, $direction: RankingDirection, $limit: Int, $query: EventsQueryInput!) {\n  getTokenEvents(\n    cursor: $cursor\n    direction: $direction\n    limit: $limit\n    query: $query\n  ) {\n    cursor\n    items {\n      address\n      baseTokenPrice\n      blockHash\n      blockNumber\n      eventDisplayType\n      eventType\n      id\n      labels {\n        sandwich {\n          label\n          sandwichType\n          token0DrainedAmount\n          token1DrainedAmount\n        }\n        washtrade {\n          label\n        }\n      }\n      liquidityToken\n      logIndex\n      maker\n      networkId\n      quoteToken\n      timestamp\n      token0PoolValueUsd\n      token0SwapValueUsd\n      token0ValueBase\n      token1PoolValueUsd\n      token1SwapValueUsd\n      token1ValueBase\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query GetTokenEventsQuery($cursor: String, $direction: RankingDirection, $limit: Int, $query: EventsQueryInput!) {\n  getTokenEvents(\n    cursor: $cursor\n    direction: $direction\n    limit: $limit\n    query: $query\n  ) {\n    cursor\n    items {\n      address\n      baseTokenPrice\n      blockHash\n      blockNumber\n      eventDisplayType\n      eventType\n      id\n      labels {\n        sandwich {\n          label\n          sandwichType\n          token0DrainedAmount\n          token1DrainedAmount\n        }\n        washtrade {\n          label\n        }\n      }\n      liquidityToken\n      logIndex\n      maker\n      networkId\n      quoteToken\n      timestamp\n      token0PoolValueUsd\n      token0SwapValueUsd\n      token0ValueBase\n      token1PoolValueUsd\n      token1SwapValueUsd\n      token1ValueBase\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetTokenInfoQuery($address: String!, $networkId: Int!) {\n  getTokenInfo(address: $address, networkId: $networkId) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}"): (typeof documents)["query GetTokenInfoQuery($address: String!, $networkId: Int!) {\n  getTokenInfo(address: $address, networkId: $networkId) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetTokenPricesQuery($inputs: [GetPriceInput]) {\n  getTokenPrices(inputs: $inputs) {\n    address\n    confidence\n    networkId\n    priceUsd\n    timestamp\n  }\n}"): (typeof documents)["query GetTokenPricesQuery($inputs: [GetPriceInput]) {\n  getTokenPrices(inputs: $inputs) {\n    address\n    confidence\n    networkId\n    priceUsd\n    timestamp\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetTokensInfoQuery($input: [GetTokensInfoInput!]!) {\n  getTokensInfo(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}"): (typeof documents)["query GetTokensInfoQuery($input: [GetTokensInfoInput!]!) {\n  getTokensInfo(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    description\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    name\n    networkId\n    symbol\n    totalSupply\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetUniV3TicksQuery($limit: Int, $networkId: Int!, $offset: Int, $poolAddress: String!) {\n  getUniV3Ticks(\n    limit: $limit\n    networkId: $networkId\n    offset: $offset\n    poolAddress: $poolAddress\n  ) {\n    count\n    offset\n    results {\n      liquidityNet\n      price0\n      price1\n      tick\n    }\n  }\n}"): (typeof documents)["query GetUniV3TicksQuery($limit: Int, $networkId: Int!, $offset: Int, $poolAddress: String!) {\n  getUniV3Ticks(\n    limit: $limit\n    networkId: $networkId\n    offset: $offset\n    poolAddress: $poolAddress\n  ) {\n    count\n    offset\n    results {\n      liquidityNet\n      price0\n      price1\n      tick\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetWebhooksQuery($bucketId: String, $bucketSortkey: String, $cursor: String, $limit: Int, $webhookId: String) {\n  getWebhooks(\n    bucketId: $bucketId\n    bucketSortkey: $bucketSortkey\n    cursor: $cursor\n    limit: $limit\n    webhookId: $webhookId\n  ) {\n    cursor\n    items {\n      alertRecurrence\n      bucketId\n      bucketSortkey\n      callbackUrl\n      created\n      groupId\n      id\n      name\n      publishingType\n      retrySettings {\n        maxRetries\n        maxRetryDelay\n        maxTimeElapsed\n        minRetryDelay\n      }\n      status\n      webhookType\n    }\n  }\n}"): (typeof documents)["query GetWebhooksQuery($bucketId: String, $bucketSortkey: String, $cursor: String, $limit: Int, $webhookId: String) {\n  getWebhooks(\n    bucketId: $bucketId\n    bucketSortkey: $bucketSortkey\n    cursor: $cursor\n    limit: $limit\n    webhookId: $webhookId\n  ) {\n    cursor\n    items {\n      alertRecurrence\n      bucketId\n      bucketSortkey\n      callbackUrl\n      created\n      groupId\n      id\n      name\n      publishingType\n      retrySettings {\n        maxRetries\n        maxRetryDelay\n        maxTimeElapsed\n        minRetryDelay\n      }\n      status\n      webhookType\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query HoldersQuery($input: HoldersInput!) {\n  holders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n    status\n  }\n}"): (typeof documents)["query HoldersQuery($input: HoldersInput!) {\n  holders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n    status\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query LiquidityLocksQuery($cursor: String, $networkId: Int!, $pairAddress: String!) {\n  liquidityLocks(\n    cursor: $cursor\n    networkId: $networkId\n    pairAddress: $pairAddress\n  ) {\n    cursor\n    items {\n      createdAt\n      initialAmountToken0\n      initialAmountToken1\n      liquidityAmount\n      liquidityNftData {\n        nftPositionManagerAddress\n        nftTokenId\n      }\n      liquidityProtocol\n      lockProtocol\n      lockerAddress\n      networkId\n      ownerAddress\n      pairAddress\n      unlockAt\n    }\n  }\n}"): (typeof documents)["query LiquidityLocksQuery($cursor: String, $networkId: Int!, $pairAddress: String!) {\n  liquidityLocks(\n    cursor: $cursor\n    networkId: $networkId\n    pairAddress: $pairAddress\n  ) {\n    cursor\n    items {\n      createdAt\n      initialAmountToken0\n      initialAmountToken1\n      liquidityAmount\n      liquidityNftData {\n        nftPositionManagerAddress\n        nftTokenId\n      }\n      liquidityProtocol\n      lockProtocol\n      lockerAddress\n      networkId\n      ownerAddress\n      pairAddress\n      unlockAt\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query LiquidityMetadataQuery($networkId: Int!, $pairAddress: String!) {\n  liquidityMetadata(networkId: $networkId, pairAddress: $pairAddress) {\n    liquidity {\n      active\n      inactive\n    }\n    lockedLiquidity {\n      active\n      inactive\n      lockBreakdown {\n        active\n        inactive\n        lockProtocol\n      }\n    }\n  }\n}"): (typeof documents)["query LiquidityMetadataQuery($networkId: Int!, $pairAddress: String!) {\n  liquidityMetadata(networkId: $networkId, pairAddress: $pairAddress) {\n    liquidity {\n      active\n      inactive\n    }\n    lockedLiquidity {\n      active\n      inactive\n      lockBreakdown {\n        active\n        inactive\n        lockProtocol\n      }\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ListFavoriteTokensQuery($keys: [String!]!, $networkFilter: [Int!], $resolution: String) {\n  listFavoriteTokens(\n    keys: $keys\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}"): (typeof documents)["query ListFavoriteTokensQuery($keys: [String!]!, $networkFilter: [Int!], $resolution: String) {\n  listFavoriteTokens(\n    keys: $keys\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ListPairsForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    address\n    createdAt\n    exchangeHash\n    fee\n    id\n    networkId\n    pooled {\n      token0\n      token1\n    }\n    tickSpacing\n    token0\n    token0Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n    token1\n    token1Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n  }\n}"): (typeof documents)["query ListPairsForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    address\n    createdAt\n    exchangeHash\n    fee\n    id\n    networkId\n    pooled {\n      token0\n      token1\n    }\n    tickSpacing\n    token0\n    token0Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n    token1\n    token1Data {\n      address\n      circulatingSupply\n      cmcId\n      createBlockNumber\n      createTransactionHash\n      createdAt\n      creatorAddress\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      explorerData {\n        blueCheckmark\n        description\n        divisor\n        id\n        tokenPriceUSD\n        tokenType\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      info {\n        address\n        circulatingSupply\n        cmcId\n        description\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        isScam\n        name\n        networkId\n        symbol\n        totalSupply\n      }\n      isScam\n      name\n      networkId\n      pooled\n      socialLinks {\n        bitcointalk\n        blog\n        coingecko\n        coinmarketcap\n        discord\n        email\n        facebook\n        github\n        instagram\n        linkedin\n        reddit\n        slack\n        telegram\n        twitch\n        twitter\n        website\n        wechat\n        whitepaper\n        youtube\n      }\n      symbol\n      totalSupply\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ListPairsWithMetadataForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsWithMetadataForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    results {\n      backingToken {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      exchange {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      liquidity\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      quoteToken\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      volume\n    }\n  }\n}"): (typeof documents)["query ListPairsWithMetadataForTokenQuery($limit: Int, $networkId: Int!, $tokenAddress: String!) {\n  listPairsWithMetadataForToken(\n    limit: $limit\n    networkId: $networkId\n    tokenAddress: $tokenAddress\n  ) {\n    results {\n      backingToken {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      exchange {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      liquidity\n      pair {\n        address\n        createdAt\n        exchangeHash\n        fee\n        id\n        networkId\n        pooled {\n          token0\n          token1\n        }\n        tickSpacing\n        token0\n        token0Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n        token1\n        token1Data {\n          address\n          circulatingSupply\n          cmcId\n          createBlockNumber\n          createTransactionHash\n          createdAt\n          creatorAddress\n          decimals\n          exchanges {\n            address\n            color\n            exchangeVersion\n            iconUrl\n            id\n            name\n            networkId\n            tradeUrl\n          }\n          explorerData {\n            blueCheckmark\n            description\n            divisor\n            id\n            tokenPriceUSD\n            tokenType\n          }\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          info {\n            address\n            circulatingSupply\n            cmcId\n            description\n            id\n            imageLargeUrl\n            imageSmallUrl\n            imageThumbUrl\n            isScam\n            name\n            networkId\n            symbol\n            totalSupply\n          }\n          isScam\n          name\n          networkId\n          pooled\n          socialLinks {\n            bitcointalk\n            blog\n            coingecko\n            coinmarketcap\n            discord\n            email\n            facebook\n            github\n            instagram\n            linkedin\n            reddit\n            slack\n            telegram\n            twitch\n            twitter\n            website\n            wechat\n            whitepaper\n            youtube\n          }\n          symbol\n          totalSupply\n        }\n      }\n      quoteToken\n      token {\n        address\n        circulatingSupply\n        cmcId\n        createBlockNumber\n        createTransactionHash\n        createdAt\n        creatorAddress\n        decimals\n        exchanges {\n          address\n          color\n          exchangeVersion\n          iconUrl\n          id\n          name\n          networkId\n          tradeUrl\n        }\n        explorerData {\n          blueCheckmark\n          description\n          divisor\n          id\n          tokenPriceUSD\n          tokenType\n        }\n        id\n        imageLargeUrl\n        imageSmallUrl\n        imageThumbUrl\n        info {\n          address\n          circulatingSupply\n          cmcId\n          description\n          id\n          imageLargeUrl\n          imageSmallUrl\n          imageThumbUrl\n          isScam\n          name\n          networkId\n          symbol\n          totalSupply\n        }\n        isScam\n        name\n        networkId\n        pooled\n        socialLinks {\n          bitcointalk\n          blog\n          coingecko\n          coinmarketcap\n          discord\n          email\n          facebook\n          github\n          instagram\n          linkedin\n          reddit\n          slack\n          telegram\n          twitch\n          twitter\n          website\n          wechat\n          whitepaper\n          youtube\n        }\n        symbol\n        totalSupply\n      }\n      volume\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ListTopTokensQuery($limit: Int, $networkFilter: [Int!], $resolution: String) {\n  listTopTokens(\n    limit: $limit\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}"): (typeof documents)["query ListTopTokensQuery($limit: Int, $networkFilter: [Int!], $resolution: String) {\n  listTopTokens(\n    limit: $limit\n    networkFilter: $networkFilter\n    resolution: $resolution\n  ) {\n    address\n    createdAt\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    isScam\n    lastTransaction\n    liquidity\n    marketCap\n    name\n    networkId\n    price\n    priceChange\n    priceChange1\n    priceChange4\n    priceChange12\n    priceChange24\n    quoteToken\n    resolution\n    symbol\n    topPairId\n    txnCount1\n    txnCount4\n    txnCount12\n    txnCount24\n    uniqueBuys1\n    uniqueBuys4\n    uniqueBuys12\n    uniqueBuys24\n    uniqueSells1\n    uniqueSells4\n    uniqueSells12\n    uniqueSells24\n    volume\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query NftHoldersQuery($input: NftHoldersInput!) {\n  nftHolders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      collectionId\n      walletAddress\n    }\n    status\n  }\n}"): (typeof documents)["query NftHoldersQuery($input: NftHoldersInput!) {\n  nftHolders(input: $input) {\n    count\n    cursor\n    items {\n      balance\n      collectionId\n      walletAddress\n    }\n    status\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query PairMetadataQuery($pairId: String!, $quoteToken: QuoteToken, $statsType: TokenPairStatisticsType) {\n  pairMetadata(pairId: $pairId, quoteToken: $quoteToken, statsType: $statsType) {\n    exchangeId\n    fee\n    highPrice1\n    highPrice1w\n    highPrice4\n    highPrice12\n    highPrice24\n    id\n    liquidity\n    liquidityToken\n    lowPrice1\n    lowPrice1w\n    lowPrice4\n    lowPrice12\n    lowPrice24\n    networkId\n    nonLiquidityToken\n    pairAddress\n    price\n    priceChange1\n    priceChange1w\n    priceChange4\n    priceChange5m\n    priceChange12\n    priceChange24\n    quoteToken\n    statsType\n    tickSpacing\n    token0 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    token1 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    volume1\n    volume1w\n    volume4\n    volume12\n    volume24\n  }\n}"): (typeof documents)["query PairMetadataQuery($pairId: String!, $quoteToken: QuoteToken, $statsType: TokenPairStatisticsType) {\n  pairMetadata(pairId: $pairId, quoteToken: $quoteToken, statsType: $statsType) {\n    exchangeId\n    fee\n    highPrice1\n    highPrice1w\n    highPrice4\n    highPrice12\n    highPrice24\n    id\n    liquidity\n    liquidityToken\n    lowPrice1\n    lowPrice1w\n    lowPrice4\n    lowPrice12\n    lowPrice24\n    networkId\n    nonLiquidityToken\n    pairAddress\n    price\n    priceChange1\n    priceChange1w\n    priceChange4\n    priceChange5m\n    priceChange12\n    priceChange24\n    quoteToken\n    statsType\n    tickSpacing\n    token0 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    token1 {\n      address\n      decimals\n      labels {\n        createdAt\n        subType\n        type\n      }\n      name\n      networkId\n      pooled\n      price\n      symbol\n    }\n    volume1\n    volume1w\n    volume4\n    volume12\n    volume24\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query PrimeBalanceQuery($walletAddress: String!) {\n  primeBalance(walletAddress: $walletAddress) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"): (typeof documents)["query PrimeBalanceQuery($walletAddress: String!) {\n  primeBalance(walletAddress: $walletAddress) {\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query PrimeHoldersQuery($cursor: String) {\n  primeHolders(cursor: $cursor) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"): (typeof documents)["query PrimeHoldersQuery($cursor: String) {\n  primeHolders(cursor: $cursor) {\n    count\n    cursor\n    items {\n      balance\n      firstHeldTimestamp\n      shiftedBalance\n      tokenId\n      walletId\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query SearchNftsQuery($filterWashTrading: Boolean, $include: [NftSearchable!], $limit: Int, $networkFilter: [Int!], $search: String, $window: String) {\n  searchNfts(\n    filterWashTrading: $filterWashTrading\n    include: $include\n    limit: $limit\n    networkFilter: $networkFilter\n    search: $search\n    window: $window\n  ) {\n    hasMore\n    items {\n      address\n      average\n      ceiling\n      floor\n      id\n      imageUrl\n      name\n      networkId\n      symbol\n      tradeCount\n      tradeCountChange\n      volume\n      volumeChange\n      window\n    }\n  }\n}"): (typeof documents)["query SearchNftsQuery($filterWashTrading: Boolean, $include: [NftSearchable!], $limit: Int, $networkFilter: [Int!], $search: String, $window: String) {\n  searchNfts(\n    filterWashTrading: $filterWashTrading\n    include: $include\n    limit: $limit\n    networkFilter: $networkFilter\n    search: $search\n    window: $window\n  ) {\n    hasMore\n    items {\n      address\n      average\n      ceiling\n      floor\n      id\n      imageUrl\n      name\n      networkId\n      symbol\n      tradeCount\n      tradeCountChange\n      volume\n      volumeChange\n      window\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query SearchTokensQuery($limit: Int, $lowVolumeFilter: Boolean, $networkFilter: [Int!], $resolution: String, $search: String!) {\n  searchTokens(\n    limit: $limit\n    lowVolumeFilter: $lowVolumeFilter\n    networkFilter: $networkFilter\n    resolution: $resolution\n    search: $search\n  ) {\n    hasMore\n    hasMoreLowVolume\n    tokens {\n      address\n      createdAt\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      lastTransaction\n      liquidity\n      marketCap\n      name\n      networkId\n      price\n      priceChange\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      quoteToken\n      resolution\n      symbol\n      topPairId\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      volume\n    }\n  }\n}"): (typeof documents)["query SearchTokensQuery($limit: Int, $lowVolumeFilter: Boolean, $networkFilter: [Int!], $resolution: String, $search: String!) {\n  searchTokens(\n    limit: $limit\n    lowVolumeFilter: $lowVolumeFilter\n    networkFilter: $networkFilter\n    resolution: $resolution\n    search: $search\n  ) {\n    hasMore\n    hasMoreLowVolume\n    tokens {\n      address\n      createdAt\n      decimals\n      exchanges {\n        address\n        color\n        exchangeVersion\n        iconUrl\n        id\n        name\n        networkId\n        tradeUrl\n      }\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      lastTransaction\n      liquidity\n      marketCap\n      name\n      networkId\n      price\n      priceChange\n      priceChange1\n      priceChange4\n      priceChange12\n      priceChange24\n      quoteToken\n      resolution\n      symbol\n      topPairId\n      txnCount1\n      txnCount4\n      txnCount12\n      txnCount24\n      uniqueBuys1\n      uniqueBuys4\n      uniqueBuys12\n      uniqueBuys24\n      uniqueSells1\n      uniqueSells4\n      uniqueSells12\n      uniqueSells24\n      volume\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query TokenQuery($input: TokenInput!) {\n  token(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"): (typeof documents)["query TokenQuery($input: TokenInput!) {\n  token(input: $input) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query TokenLifecycleEventsQuery($cursor: String, $limit: Int, $query: TokenLifecycleEventsQueryInput!) {\n  tokenLifecycleEvents(cursor: $cursor, limit: $limit, query: $query) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      id\n      logIndex\n      maker\n      networkId\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}"): (typeof documents)["query TokenLifecycleEventsQuery($cursor: String, $limit: Int, $query: TokenLifecycleEventsQueryInput!) {\n  tokenLifecycleEvents(cursor: $cursor, limit: $limit, query: $query) {\n    cursor\n    items {\n      blockHash\n      blockNumber\n      eventType\n      id\n      logIndex\n      maker\n      networkId\n      timestamp\n      tokenAddress\n      transactionHash\n      transactionIndex\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query TokenSparklinesQuery($input: TokenSparklineInput!) {\n  tokenSparklines(input: $input) {\n    attribute\n    id\n    sparkline {\n      timestamp\n      value\n    }\n  }\n}"): (typeof documents)["query TokenSparklinesQuery($input: TokenSparklineInput!) {\n  tokenSparklines(input: $input) {\n    attribute\n    id\n    sparkline {\n      timestamp\n      value\n    }\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query TokensQuery($ids: [TokenInput!]) {\n  tokens(ids: $ids) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"): (typeof documents)["query TokensQuery($ids: [TokenInput!]) {\n  tokens(ids: $ids) {\n    address\n    circulatingSupply\n    cmcId\n    createBlockNumber\n    createTransactionHash\n    createdAt\n    creatorAddress\n    decimals\n    exchanges {\n      address\n      color\n      exchangeVersion\n      iconUrl\n      id\n      name\n      networkId\n      tradeUrl\n    }\n    explorerData {\n      blueCheckmark\n      description\n      divisor\n      id\n      tokenPriceUSD\n      tokenType\n    }\n    id\n    imageLargeUrl\n    imageSmallUrl\n    imageThumbUrl\n    info {\n      address\n      circulatingSupply\n      cmcId\n      description\n      id\n      imageLargeUrl\n      imageSmallUrl\n      imageThumbUrl\n      isScam\n      name\n      networkId\n      symbol\n      totalSupply\n    }\n    isScam\n    name\n    networkId\n    pooled\n    socialLinks {\n      bitcointalk\n      blog\n      coingecko\n      coinmarketcap\n      discord\n      email\n      facebook\n      github\n      instagram\n      linkedin\n      reddit\n      slack\n      telegram\n      twitch\n      twitter\n      website\n      wechat\n      whitepaper\n      youtube\n    }\n    symbol\n    totalSupply\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query WalletNftCollectionAssetsQuery($input: WalletNftCollectionAssetsInput!) {\n  walletNftCollectionAssets(input: $input) {\n    collectionId\n    cursor\n    items {\n      quantity\n      tokenId\n    }\n    walletAddress\n  }\n}"): (typeof documents)["query WalletNftCollectionAssetsQuery($input: WalletNftCollectionAssetsInput!) {\n  walletNftCollectionAssets(input: $input) {\n    collectionId\n    cursor\n    items {\n      quantity\n      tokenId\n    }\n    walletAddress\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query WalletNftCollectionsQuery($input: WalletNftCollectionsInput!) {\n  walletNftCollections(input: $input) {\n    cursor\n    items {\n      collectionId\n      quantity\n      walletAddress\n    }\n  }\n}"): (typeof documents)["query WalletNftCollectionsQuery($input: WalletNftCollectionsInput!) {\n  walletNftCollections(input: $input) {\n    cursor\n    items {\n      collectionId\n      quantity\n      walletAddress\n    }\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;